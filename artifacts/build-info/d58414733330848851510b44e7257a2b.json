{
	"id": "d58414733330848851510b44e7257a2b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"j.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract Pegbreaker is Ownable {\r\n    // DPG stablecoin\r\n    ERC20 public dpgToken;\r\n    // DAI stablecoin\r\n    ERC20 public daiToken;\r\n    // DPB governance token\r\n    ERC20 public dpbToken;\r\n\r\n    // Event declarations\r\n    event MintDPG(address indexed user, uint256 amount);\r\n    event BurnDPG(address indexed user, uint256 amount);\r\n    event StakeDPG(address indexed user, uint256 amount);\r\n    event BondIssued(address indexed user, uint256 amount, uint256 bondType);\r\n\r\n    // Constructor\r\n    constructor(address _dpgToken, address _daiToken, address _dpbToken) Ownable(msg.sender) {\r\n        dpgToken = ERC20(_dpgToken);\r\n        daiToken = ERC20(_daiToken);\r\n        dpbToken = ERC20(_dpbToken);\r\n    }\r\n\r\n    // Function to mint DPG when DAI > $1\r\n    function mintDPG(uint256 _amount) external {\r\n        require(daiToken.balanceOf(msg.sender) >= _amount, \"Insufficient DAI\");\r\n        require(daiToken.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\");\r\n\r\n        // Additional minting logic\r\n        // Only allow minting if DAI is > $1, placeholder logic:\r\n        require(getDAIPrice() > 1 ether, \"DAI price must be > $1\");\r\n\r\n        // Mint DPG at 1:1 ratio with DAI\r\n        dpgToken.transfer(msg.sender, _amount);\r\n        emit MintDPG(msg.sender, _amount);\r\n    }\r\n\r\n    // Function to burn DPG\r\n    function burnDPG(uint256 _amount) external {\r\n        require(dpgToken.balanceOf(msg.sender) >= _amount, \"Insufficient DPG\");\r\n        require(dpgToken.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\");\r\n\r\n        // Additional burning logic, if needed\r\n        emit BurnDPG(msg.sender, _amount);\r\n    }\r\n\r\n    // Staking logic (epoch management)\r\n    function stakeDPG(uint256 _amount) external {\r\n        require(dpgToken.balanceOf(msg.sender) >= _amount, \"Insufficient DPG\");\r\n        dpgToken.transferFrom(msg.sender, address(this), _amount);\r\n\r\n        // Stake DPG logic here, lock until the next epoch\r\n        emit StakeDPG(msg.sender, _amount);\r\n    }\r\n\r\n    // Function to issue bonds\r\n    function issueBond(uint256 bondType) external {\r\n        require(bondType == 1 || bondType == 2, \"Invalid bond type\");\r\n\r\n        uint256 bondAmount = calculateBond(bondType);\r\n\r\n        // Bond issuance logic here (return % based on bond type)\r\n        emit BondIssued(msg.sender, bondAmount, bondType);\r\n    }\r\n\r\n    // Function to calculate bond returns based on bond type (1-year or 2-year)\r\n    function calculateBond(uint256 bondType) internal pure returns (uint256) {\r\n        if (bondType == 1) {\r\n            return 25; // 25% return for 1-year bond\r\n        } else if (bondType == 2) {\r\n            return 60; // 60% return for 2-year bond\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // Placeholder function to get DAI price\r\n    function getDAIPrice() public view returns (uint256) {\r\n        // Logic to get the DAI price, e.g., using an oracle\r\n        return 1 ether; // For now, just a placeholder value of $1\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"j.sol": {
				"Pegbreaker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dpgToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_daiToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dpbToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bondType",
									"type": "uint256"
								}
							],
							"name": "BondIssued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BurnDPG",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "MintDPG",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeDPG",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burnDPG",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "daiToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dpbToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dpgToken",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDAIPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bondType",
									"type": "uint256"
								}
							],
							"name": "issueBond",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mintDPG",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stakeDPG",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"j.sol\":174:3168  contract Pegbreaker is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"j.sol\":676:887  constructor(address _dpgToken, address _daiToken, address _dpbToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"j.sol\":753:763  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"j.sol\":793:802  _dpgToken */\n  dup3\n    /* \"j.sol\":776:784  dpgToken */\n  0x01\n  0x00\n    /* \"j.sol\":776:803  dpgToken = ERC20(_dpgToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"j.sol\":831:840  _daiToken */\n  dup2\n    /* \"j.sol\":814:822  daiToken */\n  0x02\n  0x00\n    /* \"j.sol\":814:841  daiToken = ERC20(_daiToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"j.sol\":869:878  _dpbToken */\n  dup1\n    /* \"j.sol\":852:860  dpbToken */\n  0x03\n  0x00\n    /* \"j.sol\":852:879  dpbToken = ERC20(_dpbToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"j.sol\":676:887  constructor(address _dpgToken, address _daiToken, address _dpbToken) Ownable(msg.sender) {... */\n  pop\n  pop\n  pop\n    /* \"j.sol\":174:3168  contract Pegbreaker is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":966:1085   */\ntag_36:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_38\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_39\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_40\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_21\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1632   */\ntag_22:\n    /* \"#utility.yul\":1601:1625   */\n  tag_42\n    /* \"#utility.yul\":1619:1624   */\n  dup2\n    /* \"#utility.yul\":1601:1625   */\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1596:1599   */\n  dup3\n    /* \"#utility.yul\":1589:1626   */\n  mstore\n    /* \"#utility.yul\":1514:1632   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1638:1860   */\ntag_9:\n    /* \"#utility.yul\":1731:1735   */\n  0x00\n    /* \"#utility.yul\":1769:1771   */\n  0x20\n    /* \"#utility.yul\":1758:1767   */\n  dup3\n    /* \"#utility.yul\":1754:1772   */\n  add\n    /* \"#utility.yul\":1746:1772   */\n  swap1\n  pop\n    /* \"#utility.yul\":1782:1853   */\n  tag_44\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1839:1848   */\n  dup4\n    /* \"#utility.yul\":1835:1852   */\n  add\n    /* \"#utility.yul\":1826:1832   */\n  dup5\n    /* \"#utility.yul\":1782:1853   */\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1638:1860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"j.sol\":174:3168  contract Pegbreaker is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"j.sol\":174:3168  contract Pegbreaker is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbe22f546\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xbe22f546\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcc7b6c63\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe4c40254\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe8981c66\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xefc37873\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x590fdbe1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xaf294a36\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb53220c1\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"j.sol\":235:256  ERC20 public dpgToken */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"j.sol\":2974:3165  function getDAIPrice() public view returns (uint256) {... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"j.sol\":938:1478  function mintDPG(uint256 _amount) external {... */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"j.sol\":286:307  ERC20 public daiToken */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"j.sol\":1886:2194  function stakeDPG(uint256 _amount) external {... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"j.sol\":1515:1837  function burnDPG(uint256 _amount) external {... */\n    tag_10:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"j.sol\":343:364  ERC20 public dpbToken */\n    tag_11:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"j.sol\":2234:2545  function issueBond(uint256 bondType) external {... */\n    tag_12:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"j.sol\":235:256  ERC20 public dpgToken */\n    tag_16:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"j.sol\":2974:3165  function getDAIPrice() public view returns (uint256) {... */\n    tag_26:\n        /* \"j.sol\":3018:3025  uint256 */\n      0x00\n        /* \"j.sol\":3107:3114  1 ether */\n      0x0de0b6b3a7640000\n        /* \"j.sol\":3100:3114  return 1 ether */\n      swap1\n      pop\n        /* \"j.sol\":2974:3165  function getDAIPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"j.sol\":938:1478  function mintDPG(uint256 _amount) external {... */\n    tag_32:\n        /* \"j.sol\":1034:1041  _amount */\n      dup1\n        /* \"j.sol\":1000:1008  daiToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"j.sol\":1000:1018  daiToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"j.sol\":1019:1029  msg.sender */\n      caller\n        /* \"j.sol\":1000:1030  daiToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"j.sol\":1000:1041  daiToken.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"j.sol\":992:1062  require(daiToken.balanceOf(msg.sender) >= _amount, \"Insufficient DAI\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"j.sol\":1081:1089  daiToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"j.sol\":1081:1102  daiToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"j.sol\":1103:1113  msg.sender */\n      caller\n        /* \"j.sol\":1123:1127  this */\n      address\n        /* \"j.sol\":1130:1137  _amount */\n      dup5\n        /* \"j.sol\":1081:1138  daiToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"j.sol\":1073:1158  require(daiToken.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"j.sol\":1298:1305  1 ether */\n      0x0de0b6b3a7640000\n        /* \"j.sol\":1282:1295  getDAIPrice() */\n      tag_78\n        /* \"j.sol\":1282:1293  getDAIPrice */\n      tag_26\n        /* \"j.sol\":1282:1295  getDAIPrice() */\n      jump\t// in\n    tag_78:\n        /* \"j.sol\":1282:1305  getDAIPrice() > 1 ether */\n      gt\n        /* \"j.sol\":1274:1332  require(getDAIPrice() > 1 ether, \"DAI price must be > $1\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"j.sol\":1388:1396  dpgToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"j.sol\":1388:1405  dpgToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"j.sol\":1406:1416  msg.sender */\n      caller\n        /* \"j.sol\":1418:1425  _amount */\n      dup4\n        /* \"j.sol\":1388:1426  dpgToken.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_86:\n      pop\n        /* \"j.sol\":1450:1460  msg.sender */\n      caller\n        /* \"j.sol\":1442:1470  MintDPG(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa577f0b609bbaa3578ef39f3c60d91dd8fa91cdf1725aded5d005dfca8a638f8\n        /* \"j.sol\":1462:1469  _amount */\n      dup3\n        /* \"j.sol\":1442:1470  MintDPG(msg.sender, _amount) */\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"j.sol\":938:1478  function mintDPG(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"j.sol\":286:307  ERC20 public daiToken */\n    tag_34:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"j.sol\":1886:2194  function stakeDPG(uint256 _amount) external {... */\n    tag_38:\n        /* \"j.sol\":1983:1990  _amount */\n      dup1\n        /* \"j.sol\":1949:1957  dpgToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"j.sol\":1949:1967  dpgToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"j.sol\":1968:1978  msg.sender */\n      caller\n        /* \"j.sol\":1949:1979  dpgToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n        /* \"j.sol\":1949:1990  dpgToken.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"j.sol\":1941:2011  require(dpgToken.balanceOf(msg.sender) >= _amount, \"Insufficient DPG\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"j.sol\":2022:2030  dpgToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"j.sol\":2022:2043  dpgToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"j.sol\":2044:2054  msg.sender */\n      caller\n        /* \"j.sol\":2064:2068  this */\n      address\n        /* \"j.sol\":2071:2078  _amount */\n      dup5\n        /* \"j.sol\":2022:2079  dpgToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_99:\n      pop\n        /* \"j.sol\":2166:2176  msg.sender */\n      caller\n        /* \"j.sol\":2157:2186  StakeDPG(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7d5463a42dc0f5beb958d684268ce85d26bcd53a33e7d1398a49125108faab45\n        /* \"j.sol\":2178:2185  _amount */\n      dup3\n        /* \"j.sol\":2157:2186  StakeDPG(msg.sender, _amount) */\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"j.sol\":1886:2194  function stakeDPG(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"j.sol\":1515:1837  function burnDPG(uint256 _amount) external {... */\n    tag_41:\n        /* \"j.sol\":1611:1618  _amount */\n      dup1\n        /* \"j.sol\":1577:1585  dpgToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"j.sol\":1577:1595  dpgToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"j.sol\":1596:1606  msg.sender */\n      caller\n        /* \"j.sol\":1577:1607  dpgToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_102:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_105:\n        /* \"j.sol\":1577:1618  dpgToken.balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"j.sol\":1569:1639  require(dpgToken.balanceOf(msg.sender) >= _amount, \"Insufficient DPG\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_95\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"j.sol\":1658:1666  dpgToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"j.sol\":1658:1679  dpgToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"j.sol\":1680:1690  msg.sender */\n      caller\n        /* \"j.sol\":1700:1704  this */\n      address\n        /* \"j.sol\":1707:1714  _amount */\n      dup5\n        /* \"j.sol\":1658:1715  dpgToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_111:\n        /* \"j.sol\":1650:1735  require(dpgToken.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_77\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"j.sol\":1809:1819  msg.sender */\n      caller\n        /* \"j.sol\":1801:1829  BurnDPG(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2da0223090a78fe05410afe8bffe41fce0d1f36895479de9f0e97dd0b3ae1468\n        /* \"j.sol\":1821:1828  _amount */\n      dup3\n        /* \"j.sol\":1801:1829  BurnDPG(msg.sender, _amount) */\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"j.sol\":1515:1837  function burnDPG(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"j.sol\":343:364  ERC20 public dpbToken */\n    tag_43:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"j.sol\":2234:2545  function issueBond(uint256 bondType) external {... */\n    tag_47:\n        /* \"j.sol\":2311:2312  1 */\n      0x01\n        /* \"j.sol\":2299:2307  bondType */\n      dup2\n        /* \"j.sol\":2299:2312  bondType == 1 */\n      eq\n        /* \"j.sol\":2299:2329  bondType == 1 || bondType == 2 */\n      dup1\n      tag_116\n      jumpi\n      pop\n        /* \"j.sol\":2328:2329  2 */\n      0x02\n        /* \"j.sol\":2316:2324  bondType */\n      dup2\n        /* \"j.sol\":2316:2329  bondType == 2 */\n      eq\n        /* \"j.sol\":2299:2329  bondType == 1 || bondType == 2 */\n    tag_116:\n        /* \"j.sol\":2291:2351  require(bondType == 1 || bondType == 2, \"Invalid bond type\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"j.sol\":2364:2382  uint256 bondAmount */\n      0x00\n        /* \"j.sol\":2385:2408  calculateBond(bondType) */\n      tag_120\n        /* \"j.sol\":2399:2407  bondType */\n      dup3\n        /* \"j.sol\":2385:2398  calculateBond */\n      tag_121\n        /* \"j.sol\":2385:2408  calculateBond(bondType) */\n      jump\t// in\n    tag_120:\n        /* \"j.sol\":2364:2408  uint256 bondAmount = calculateBond(bondType) */\n      swap1\n      pop\n        /* \"j.sol\":2504:2514  msg.sender */\n      caller\n        /* \"j.sol\":2493:2537  BondIssued(msg.sender, bondAmount, bondType) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc7f101cd893547ed94b213df84d6f6c162b79d94f012e0939358b1e2aabbb0f1\n        /* \"j.sol\":2516:2526  bondAmount */\n      dup3\n        /* \"j.sol\":2528:2536  bondType */\n      dup5\n        /* \"j.sol\":2493:2537  BondIssued(msg.sender, bondAmount, bondType) */\n      mload(0x40)\n      tag_122\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"j.sol\":2280:2545  {... */\n      pop\n        /* \"j.sol\":2234:2545  function issueBond(uint256 bondType) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_22\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"j.sol\":2634:2920  function calculateBond(uint256 bondType) internal pure returns (uint256) {... */\n    tag_121:\n        /* \"j.sol\":2698:2705  uint256 */\n      0x00\n        /* \"j.sol\":2734:2735  1 */\n      0x01\n        /* \"j.sol\":2722:2730  bondType */\n      dup3\n        /* \"j.sol\":2722:2735  bondType == 1 */\n      sub\n        /* \"j.sol\":2718:2894  if (bondType == 1) {... */\n      tag_139\n      jumpi\n        /* \"j.sol\":2759:2761  25 */\n      0x19\n        /* \"j.sol\":2752:2761  return 25 */\n      swap1\n      pop\n      jump(tag_138)\n        /* \"j.sol\":2718:2894  if (bondType == 1) {... */\n    tag_139:\n        /* \"j.sol\":2825:2826  2 */\n      0x02\n        /* \"j.sol\":2813:2821  bondType */\n      dup3\n        /* \"j.sol\":2813:2826  bondType == 2 */\n      sub\n        /* \"j.sol\":2809:2894  if (bondType == 2) {... */\n      tag_141\n      jumpi\n        /* \"j.sol\":2850:2852  60 */\n      0x3c\n        /* \"j.sol\":2843:2852  return 60 */\n      swap1\n      pop\n      jump(tag_138)\n        /* \"j.sol\":2809:2894  if (bondType == 2) {... */\n    tag_141:\n        /* \"j.sol\":2911:2912  0 */\n      0x00\n        /* \"j.sol\":2904:2912  return 0 */\n      swap1\n      pop\n        /* \"j.sol\":2634:2920  function calculateBond(uint256 bondType) internal pure returns (uint256) {... */\n    tag_138:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_143:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_144:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_145:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_179\n        /* \"#utility.yul\":306:340   */\n      tag_180\n        /* \"#utility.yul\":315:339   */\n      tag_181\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_143\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":306:340   */\n      tag_144\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":288:341   */\n      tag_143\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_146:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_183\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_145\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:624   */\n    tag_147:\n        /* \"#utility.yul\":548:557   */\n      0x00\n        /* \"#utility.yul\":581:618   */\n      tag_185\n        /* \"#utility.yul\":612:617   */\n      dup3\n        /* \"#utility.yul\":581:618   */\n      tag_146\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":568:618   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":630:787   */\n    tag_148:\n        /* \"#utility.yul\":730:780   */\n      tag_187\n        /* \"#utility.yul\":774:779   */\n      dup2\n        /* \"#utility.yul\":730:780   */\n      tag_147\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":725:728   */\n      dup3\n        /* \"#utility.yul\":718:781   */\n      mstore\n        /* \"#utility.yul\":630:787   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:1041   */\n    tag_18:\n        /* \"#utility.yul\":899:903   */\n      0x00\n        /* \"#utility.yul\":937:939   */\n      0x20\n        /* \"#utility.yul\":926:935   */\n      dup3\n        /* \"#utility.yul\":922:940   */\n      add\n        /* \"#utility.yul\":914:940   */\n      swap1\n      pop\n        /* \"#utility.yul\":950:1034   */\n      tag_189\n        /* \"#utility.yul\":1031:1032   */\n      0x00\n        /* \"#utility.yul\":1020:1029   */\n      dup4\n        /* \"#utility.yul\":1016:1033   */\n      add\n        /* \"#utility.yul\":1007:1013   */\n      dup5\n        /* \"#utility.yul\":950:1034   */\n      tag_148\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":793:1041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1047:1143   */\n    tag_149:\n        /* \"#utility.yul\":1084:1091   */\n      0x00\n        /* \"#utility.yul\":1113:1137   */\n      tag_191\n        /* \"#utility.yul\":1131:1136   */\n      dup3\n        /* \"#utility.yul\":1113:1137   */\n      tag_143\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1102:1137   */\n      swap1\n      pop\n        /* \"#utility.yul\":1047:1143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1267   */\n    tag_150:\n        /* \"#utility.yul\":1236:1260   */\n      tag_193\n        /* \"#utility.yul\":1254:1259   */\n      dup2\n        /* \"#utility.yul\":1236:1260   */\n      tag_149\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1231:1234   */\n      dup3\n        /* \"#utility.yul\":1224:1261   */\n      mstore\n        /* \"#utility.yul\":1149:1267   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1273:1495   */\n    tag_24:\n        /* \"#utility.yul\":1366:1370   */\n      0x00\n        /* \"#utility.yul\":1404:1406   */\n      0x20\n        /* \"#utility.yul\":1393:1402   */\n      dup3\n        /* \"#utility.yul\":1389:1407   */\n      add\n        /* \"#utility.yul\":1381:1407   */\n      swap1\n      pop\n        /* \"#utility.yul\":1417:1488   */\n      tag_195\n        /* \"#utility.yul\":1485:1486   */\n      0x00\n        /* \"#utility.yul\":1474:1483   */\n      dup4\n        /* \"#utility.yul\":1470:1487   */\n      add\n        /* \"#utility.yul\":1461:1467   */\n      dup5\n        /* \"#utility.yul\":1417:1488   */\n      tag_150\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1273:1495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1501:1578   */\n    tag_151:\n        /* \"#utility.yul\":1538:1545   */\n      0x00\n        /* \"#utility.yul\":1567:1572   */\n      dup2\n        /* \"#utility.yul\":1556:1572   */\n      swap1\n      pop\n        /* \"#utility.yul\":1501:1578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1584:1702   */\n    tag_152:\n        /* \"#utility.yul\":1671:1695   */\n      tag_198\n        /* \"#utility.yul\":1689:1694   */\n      dup2\n        /* \"#utility.yul\":1671:1695   */\n      tag_151\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1666:1669   */\n      dup3\n        /* \"#utility.yul\":1659:1696   */\n      mstore\n        /* \"#utility.yul\":1584:1702   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1708:1930   */\n    tag_28:\n        /* \"#utility.yul\":1801:1805   */\n      0x00\n        /* \"#utility.yul\":1839:1841   */\n      0x20\n        /* \"#utility.yul\":1828:1837   */\n      dup3\n        /* \"#utility.yul\":1824:1842   */\n      add\n        /* \"#utility.yul\":1816:1842   */\n      swap1\n      pop\n        /* \"#utility.yul\":1852:1923   */\n      tag_200\n        /* \"#utility.yul\":1920:1921   */\n      0x00\n        /* \"#utility.yul\":1909:1918   */\n      dup4\n        /* \"#utility.yul\":1905:1922   */\n      add\n        /* \"#utility.yul\":1896:1902   */\n      dup5\n        /* \"#utility.yul\":1852:1923   */\n      tag_152\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1708:1930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2017:2134   */\n    tag_154:\n        /* \"#utility.yul\":2126:2127   */\n      0x00\n        /* \"#utility.yul\":2123:2124   */\n      dup1\n        /* \"#utility.yul\":2116:2128   */\n      revert\n        /* \"#utility.yul\":2263:2385   */\n    tag_156:\n        /* \"#utility.yul\":2336:2360   */\n      tag_205\n        /* \"#utility.yul\":2354:2359   */\n      dup2\n        /* \"#utility.yul\":2336:2360   */\n      tag_151\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2326:2361   */\n      eq\n        /* \"#utility.yul\":2316:2379   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":2375:2376   */\n      0x00\n        /* \"#utility.yul\":2372:2373   */\n      dup1\n        /* \"#utility.yul\":2365:2377   */\n      revert\n        /* \"#utility.yul\":2316:2379   */\n    tag_206:\n        /* \"#utility.yul\":2263:2385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2391:2530   */\n    tag_157:\n        /* \"#utility.yul\":2437:2442   */\n      0x00\n        /* \"#utility.yul\":2475:2481   */\n      dup2\n        /* \"#utility.yul\":2462:2482   */\n      calldataload\n        /* \"#utility.yul\":2453:2482   */\n      swap1\n      pop\n        /* \"#utility.yul\":2491:2524   */\n      tag_208\n        /* \"#utility.yul\":2518:2523   */\n      dup2\n        /* \"#utility.yul\":2491:2524   */\n      tag_156\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2391:2530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2536:2865   */\n    tag_31:\n        /* \"#utility.yul\":2595:2601   */\n      0x00\n        /* \"#utility.yul\":2644:2646   */\n      0x20\n        /* \"#utility.yul\":2632:2641   */\n      dup3\n        /* \"#utility.yul\":2623:2630   */\n      dup5\n        /* \"#utility.yul\":2619:2642   */\n      sub\n        /* \"#utility.yul\":2615:2647   */\n      slt\n        /* \"#utility.yul\":2612:2731   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2650:2729   */\n      tag_211\n      tag_154\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2612:2731   */\n    tag_210:\n        /* \"#utility.yul\":2770:2771   */\n      0x00\n        /* \"#utility.yul\":2795:2848   */\n      tag_212\n        /* \"#utility.yul\":2840:2847   */\n      dup5\n        /* \"#utility.yul\":2831:2837   */\n      dup3\n        /* \"#utility.yul\":2820:2829   */\n      dup6\n        /* \"#utility.yul\":2816:2838   */\n      add\n        /* \"#utility.yul\":2795:2848   */\n      tag_157\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2785:2848   */\n      swap2\n      pop\n        /* \"#utility.yul\":2741:2858   */\n      pop\n        /* \"#utility.yul\":2536:2865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2871:2993   */\n    tag_158:\n        /* \"#utility.yul\":2944:2968   */\n      tag_214\n        /* \"#utility.yul\":2962:2967   */\n      dup2\n        /* \"#utility.yul\":2944:2968   */\n      tag_149\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2934:2969   */\n      eq\n        /* \"#utility.yul\":2924:2987   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2983:2984   */\n      0x00\n        /* \"#utility.yul\":2980:2981   */\n      dup1\n        /* \"#utility.yul\":2973:2985   */\n      revert\n        /* \"#utility.yul\":2924:2987   */\n    tag_215:\n        /* \"#utility.yul\":2871:2993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2999:3138   */\n    tag_159:\n        /* \"#utility.yul\":3045:3050   */\n      0x00\n        /* \"#utility.yul\":3083:3089   */\n      dup2\n        /* \"#utility.yul\":3070:3090   */\n      calldataload\n        /* \"#utility.yul\":3061:3090   */\n      swap1\n      pop\n        /* \"#utility.yul\":3099:3132   */\n      tag_217\n        /* \"#utility.yul\":3126:3131   */\n      dup2\n        /* \"#utility.yul\":3099:3132   */\n      tag_158\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2999:3138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3144:3473   */\n    tag_50:\n        /* \"#utility.yul\":3203:3209   */\n      0x00\n        /* \"#utility.yul\":3252:3254   */\n      0x20\n        /* \"#utility.yul\":3240:3249   */\n      dup3\n        /* \"#utility.yul\":3231:3238   */\n      dup5\n        /* \"#utility.yul\":3227:3250   */\n      sub\n        /* \"#utility.yul\":3223:3255   */\n      slt\n        /* \"#utility.yul\":3220:3339   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":3258:3337   */\n      tag_220\n      tag_154\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3220:3339   */\n    tag_219:\n        /* \"#utility.yul\":3378:3379   */\n      0x00\n        /* \"#utility.yul\":3403:3456   */\n      tag_221\n        /* \"#utility.yul\":3448:3455   */\n      dup5\n        /* \"#utility.yul\":3439:3445   */\n      dup3\n        /* \"#utility.yul\":3428:3437   */\n      dup6\n        /* \"#utility.yul\":3424:3446   */\n      add\n        /* \"#utility.yul\":3403:3456   */\n      tag_159\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3393:3456   */\n      swap2\n      pop\n        /* \"#utility.yul\":3349:3466   */\n      pop\n        /* \"#utility.yul\":3144:3473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3479:3622   */\n    tag_160:\n        /* \"#utility.yul\":3536:3541   */\n      0x00\n        /* \"#utility.yul\":3567:3573   */\n      dup2\n        /* \"#utility.yul\":3561:3574   */\n      mload\n        /* \"#utility.yul\":3552:3574   */\n      swap1\n      pop\n        /* \"#utility.yul\":3583:3616   */\n      tag_223\n        /* \"#utility.yul\":3610:3615   */\n      dup2\n        /* \"#utility.yul\":3583:3616   */\n      tag_156\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3479:3622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3628:3979   */\n    tag_65:\n        /* \"#utility.yul\":3698:3704   */\n      0x00\n        /* \"#utility.yul\":3747:3749   */\n      0x20\n        /* \"#utility.yul\":3735:3744   */\n      dup3\n        /* \"#utility.yul\":3726:3733   */\n      dup5\n        /* \"#utility.yul\":3722:3745   */\n      sub\n        /* \"#utility.yul\":3718:3750   */\n      slt\n        /* \"#utility.yul\":3715:3834   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3753:3832   */\n      tag_226\n      tag_154\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3715:3834   */\n    tag_225:\n        /* \"#utility.yul\":3873:3874   */\n      0x00\n        /* \"#utility.yul\":3898:3962   */\n      tag_227\n        /* \"#utility.yul\":3954:3961   */\n      dup5\n        /* \"#utility.yul\":3945:3951   */\n      dup3\n        /* \"#utility.yul\":3934:3943   */\n      dup6\n        /* \"#utility.yul\":3930:3952   */\n      add\n        /* \"#utility.yul\":3898:3962   */\n      tag_160\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3888:3962   */\n      swap2\n      pop\n        /* \"#utility.yul\":3844:3972   */\n      pop\n        /* \"#utility.yul\":3628:3979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3985:4154   */\n    tag_161:\n        /* \"#utility.yul\":4069:4080   */\n      0x00\n        /* \"#utility.yul\":4103:4109   */\n      dup3\n        /* \"#utility.yul\":4098:4101   */\n      dup3\n        /* \"#utility.yul\":4091:4110   */\n      mstore\n        /* \"#utility.yul\":4143:4147   */\n      0x20\n        /* \"#utility.yul\":4138:4141   */\n      dup3\n        /* \"#utility.yul\":4134:4148   */\n      add\n        /* \"#utility.yul\":4119:4148   */\n      swap1\n      pop\n        /* \"#utility.yul\":3985:4154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4160:4326   */\n    tag_162:\n        /* \"#utility.yul\":4300:4318   */\n      0x496e73756666696369656e742044414900000000000000000000000000000000\n        /* \"#utility.yul\":4296:4297   */\n      0x00\n        /* \"#utility.yul\":4288:4294   */\n      dup3\n        /* \"#utility.yul\":4284:4298   */\n      add\n        /* \"#utility.yul\":4277:4319   */\n      mstore\n        /* \"#utility.yul\":4160:4326   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4332:4698   */\n    tag_163:\n        /* \"#utility.yul\":4474:4477   */\n      0x00\n        /* \"#utility.yul\":4495:4562   */\n      tag_231\n        /* \"#utility.yul\":4559:4561   */\n      0x10\n        /* \"#utility.yul\":4554:4557   */\n      dup4\n        /* \"#utility.yul\":4495:4562   */\n      tag_161\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4488:4562   */\n      swap2\n      pop\n        /* \"#utility.yul\":4571:4664   */\n      tag_232\n        /* \"#utility.yul\":4660:4663   */\n      dup3\n        /* \"#utility.yul\":4571:4664   */\n      tag_162\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4689:4691   */\n      0x20\n        /* \"#utility.yul\":4684:4687   */\n      dup3\n        /* \"#utility.yul\":4680:4692   */\n      add\n        /* \"#utility.yul\":4673:4692   */\n      swap1\n      pop\n        /* \"#utility.yul\":4332:4698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4704:5123   */\n    tag_68:\n        /* \"#utility.yul\":4870:4874   */\n      0x00\n        /* \"#utility.yul\":4908:4910   */\n      0x20\n        /* \"#utility.yul\":4897:4906   */\n      dup3\n        /* \"#utility.yul\":4893:4911   */\n      add\n        /* \"#utility.yul\":4885:4911   */\n      swap1\n      pop\n        /* \"#utility.yul\":4957:4966   */\n      dup2\n        /* \"#utility.yul\":4951:4955   */\n      dup2\n        /* \"#utility.yul\":4947:4967   */\n      sub\n        /* \"#utility.yul\":4943:4944   */\n      0x00\n        /* \"#utility.yul\":4932:4941   */\n      dup4\n        /* \"#utility.yul\":4928:4945   */\n      add\n        /* \"#utility.yul\":4921:4968   */\n      mstore\n        /* \"#utility.yul\":4985:5116   */\n      tag_234\n        /* \"#utility.yul\":5111:5115   */\n      dup2\n        /* \"#utility.yul\":4985:5116   */\n      tag_163\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4977:5116   */\n      swap1\n      pop\n        /* \"#utility.yul\":4704:5123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5129:5571   */\n    tag_70:\n        /* \"#utility.yul\":5278:5282   */\n      0x00\n        /* \"#utility.yul\":5316:5318   */\n      0x60\n        /* \"#utility.yul\":5305:5314   */\n      dup3\n        /* \"#utility.yul\":5301:5319   */\n      add\n        /* \"#utility.yul\":5293:5319   */\n      swap1\n      pop\n        /* \"#utility.yul\":5329:5400   */\n      tag_236\n        /* \"#utility.yul\":5397:5398   */\n      0x00\n        /* \"#utility.yul\":5386:5395   */\n      dup4\n        /* \"#utility.yul\":5382:5399   */\n      add\n        /* \"#utility.yul\":5373:5379   */\n      dup7\n        /* \"#utility.yul\":5329:5400   */\n      tag_150\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5410:5482   */\n      tag_237\n        /* \"#utility.yul\":5478:5480   */\n      0x20\n        /* \"#utility.yul\":5467:5476   */\n      dup4\n        /* \"#utility.yul\":5463:5481   */\n      add\n        /* \"#utility.yul\":5454:5460   */\n      dup6\n        /* \"#utility.yul\":5410:5482   */\n      tag_150\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5492:5564   */\n      tag_238\n        /* \"#utility.yul\":5560:5562   */\n      0x40\n        /* \"#utility.yul\":5549:5558   */\n      dup4\n        /* \"#utility.yul\":5545:5563   */\n      add\n        /* \"#utility.yul\":5536:5542   */\n      dup5\n        /* \"#utility.yul\":5492:5564   */\n      tag_152\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5129:5571   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5577:5667   */\n    tag_164:\n        /* \"#utility.yul\":5611:5618   */\n      0x00\n        /* \"#utility.yul\":5654:5659   */\n      dup2\n        /* \"#utility.yul\":5647:5660   */\n      iszero\n        /* \"#utility.yul\":5640:5661   */\n      iszero\n        /* \"#utility.yul\":5629:5661   */\n      swap1\n      pop\n        /* \"#utility.yul\":5577:5667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5673:5789   */\n    tag_165:\n        /* \"#utility.yul\":5743:5764   */\n      tag_241\n        /* \"#utility.yul\":5758:5763   */\n      dup2\n        /* \"#utility.yul\":5743:5764   */\n      tag_164\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5736:5741   */\n      dup2\n        /* \"#utility.yul\":5733:5765   */\n      eq\n        /* \"#utility.yul\":5723:5783   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":5779:5780   */\n      0x00\n        /* \"#utility.yul\":5776:5777   */\n      dup1\n        /* \"#utility.yul\":5769:5781   */\n      revert\n        /* \"#utility.yul\":5723:5783   */\n    tag_242:\n        /* \"#utility.yul\":5673:5789   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5795:5932   */\n    tag_166:\n        /* \"#utility.yul\":5849:5854   */\n      0x00\n        /* \"#utility.yul\":5880:5886   */\n      dup2\n        /* \"#utility.yul\":5874:5887   */\n      mload\n        /* \"#utility.yul\":5865:5887   */\n      swap1\n      pop\n        /* \"#utility.yul\":5896:5926   */\n      tag_244\n        /* \"#utility.yul\":5920:5925   */\n      dup2\n        /* \"#utility.yul\":5896:5926   */\n      tag_165\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5795:5932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6283   */\n    tag_74:\n        /* \"#utility.yul\":6005:6011   */\n      0x00\n        /* \"#utility.yul\":6054:6056   */\n      0x20\n        /* \"#utility.yul\":6042:6051   */\n      dup3\n        /* \"#utility.yul\":6033:6040   */\n      dup5\n        /* \"#utility.yul\":6029:6052   */\n      sub\n        /* \"#utility.yul\":6025:6057   */\n      slt\n        /* \"#utility.yul\":6022:6141   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6060:6139   */\n      tag_247\n      tag_154\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6022:6141   */\n    tag_246:\n        /* \"#utility.yul\":6180:6181   */\n      0x00\n        /* \"#utility.yul\":6205:6266   */\n      tag_248\n        /* \"#utility.yul\":6258:6265   */\n      dup5\n        /* \"#utility.yul\":6249:6255   */\n      dup3\n        /* \"#utility.yul\":6238:6247   */\n      dup6\n        /* \"#utility.yul\":6234:6256   */\n      add\n        /* \"#utility.yul\":6205:6266   */\n      tag_166\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6195:6266   */\n      swap2\n      pop\n        /* \"#utility.yul\":6151:6276   */\n      pop\n        /* \"#utility.yul\":5938:6283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6289:6454   */\n    tag_167:\n        /* \"#utility.yul\":6429:6446   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":6425:6426   */\n      0x00\n        /* \"#utility.yul\":6417:6423   */\n      dup3\n        /* \"#utility.yul\":6413:6427   */\n      add\n        /* \"#utility.yul\":6406:6447   */\n      mstore\n        /* \"#utility.yul\":6289:6454   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6460:6826   */\n    tag_168:\n        /* \"#utility.yul\":6602:6605   */\n      0x00\n        /* \"#utility.yul\":6623:6690   */\n      tag_251\n        /* \"#utility.yul\":6687:6689   */\n      0x0f\n        /* \"#utility.yul\":6682:6685   */\n      dup4\n        /* \"#utility.yul\":6623:6690   */\n      tag_161\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6616:6690   */\n      swap2\n      pop\n        /* \"#utility.yul\":6699:6792   */\n      tag_252\n        /* \"#utility.yul\":6788:6791   */\n      dup3\n        /* \"#utility.yul\":6699:6792   */\n      tag_167\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6817:6819   */\n      0x20\n        /* \"#utility.yul\":6812:6815   */\n      dup3\n        /* \"#utility.yul\":6808:6820   */\n      add\n        /* \"#utility.yul\":6801:6820   */\n      swap1\n      pop\n        /* \"#utility.yul\":6460:6826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6832:7251   */\n    tag_77:\n        /* \"#utility.yul\":6998:7002   */\n      0x00\n        /* \"#utility.yul\":7036:7038   */\n      0x20\n        /* \"#utility.yul\":7025:7034   */\n      dup3\n        /* \"#utility.yul\":7021:7039   */\n      add\n        /* \"#utility.yul\":7013:7039   */\n      swap1\n      pop\n        /* \"#utility.yul\":7085:7094   */\n      dup2\n        /* \"#utility.yul\":7079:7083   */\n      dup2\n        /* \"#utility.yul\":7075:7095   */\n      sub\n        /* \"#utility.yul\":7071:7072   */\n      0x00\n        /* \"#utility.yul\":7060:7069   */\n      dup4\n        /* \"#utility.yul\":7056:7073   */\n      add\n        /* \"#utility.yul\":7049:7096   */\n      mstore\n        /* \"#utility.yul\":7113:7244   */\n      tag_254\n        /* \"#utility.yul\":7239:7243   */\n      dup2\n        /* \"#utility.yul\":7113:7244   */\n      tag_168\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7105:7244   */\n      swap1\n      pop\n        /* \"#utility.yul\":6832:7251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7257:7429   */\n    tag_169:\n        /* \"#utility.yul\":7397:7421   */\n      0x444149207072696365206d757374206265203e20243100000000000000000000\n        /* \"#utility.yul\":7393:7394   */\n      0x00\n        /* \"#utility.yul\":7385:7391   */\n      dup3\n        /* \"#utility.yul\":7381:7395   */\n      add\n        /* \"#utility.yul\":7374:7422   */\n      mstore\n        /* \"#utility.yul\":7257:7429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7435:7801   */\n    tag_170:\n        /* \"#utility.yul\":7577:7580   */\n      0x00\n        /* \"#utility.yul\":7598:7665   */\n      tag_257\n        /* \"#utility.yul\":7662:7664   */\n      0x16\n        /* \"#utility.yul\":7657:7660   */\n      dup4\n        /* \"#utility.yul\":7598:7665   */\n      tag_161\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7591:7665   */\n      swap2\n      pop\n        /* \"#utility.yul\":7674:7767   */\n      tag_258\n        /* \"#utility.yul\":7763:7766   */\n      dup3\n        /* \"#utility.yul\":7674:7767   */\n      tag_169\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7792:7794   */\n      0x20\n        /* \"#utility.yul\":7787:7790   */\n      dup3\n        /* \"#utility.yul\":7783:7795   */\n      add\n        /* \"#utility.yul\":7776:7795   */\n      swap1\n      pop\n        /* \"#utility.yul\":7435:7801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7807:8226   */\n    tag_81:\n        /* \"#utility.yul\":7973:7977   */\n      0x00\n        /* \"#utility.yul\":8011:8013   */\n      0x20\n        /* \"#utility.yul\":8000:8009   */\n      dup3\n        /* \"#utility.yul\":7996:8014   */\n      add\n        /* \"#utility.yul\":7988:8014   */\n      swap1\n      pop\n        /* \"#utility.yul\":8060:8069   */\n      dup2\n        /* \"#utility.yul\":8054:8058   */\n      dup2\n        /* \"#utility.yul\":8050:8070   */\n      sub\n        /* \"#utility.yul\":8046:8047   */\n      0x00\n        /* \"#utility.yul\":8035:8044   */\n      dup4\n        /* \"#utility.yul\":8031:8048   */\n      add\n        /* \"#utility.yul\":8024:8071   */\n      mstore\n        /* \"#utility.yul\":8088:8219   */\n      tag_260\n        /* \"#utility.yul\":8214:8218   */\n      dup2\n        /* \"#utility.yul\":8088:8219   */\n      tag_170\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8080:8219   */\n      swap1\n      pop\n        /* \"#utility.yul\":7807:8226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8232:8564   */\n    tag_83:\n        /* \"#utility.yul\":8353:8357   */\n      0x00\n        /* \"#utility.yul\":8391:8393   */\n      0x40\n        /* \"#utility.yul\":8380:8389   */\n      dup3\n        /* \"#utility.yul\":8376:8394   */\n      add\n        /* \"#utility.yul\":8368:8394   */\n      swap1\n      pop\n        /* \"#utility.yul\":8404:8475   */\n      tag_262\n        /* \"#utility.yul\":8472:8473   */\n      0x00\n        /* \"#utility.yul\":8461:8470   */\n      dup4\n        /* \"#utility.yul\":8457:8474   */\n      add\n        /* \"#utility.yul\":8448:8454   */\n      dup6\n        /* \"#utility.yul\":8404:8475   */\n      tag_150\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8485:8557   */\n      tag_263\n        /* \"#utility.yul\":8553:8555   */\n      0x20\n        /* \"#utility.yul\":8542:8551   */\n      dup4\n        /* \"#utility.yul\":8538:8556   */\n      add\n        /* \"#utility.yul\":8529:8535   */\n      dup5\n        /* \"#utility.yul\":8485:8557   */\n      tag_152\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8232:8564   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8570:8736   */\n    tag_171:\n        /* \"#utility.yul\":8710:8728   */\n      0x496e73756666696369656e742044504700000000000000000000000000000000\n        /* \"#utility.yul\":8706:8707   */\n      0x00\n        /* \"#utility.yul\":8698:8704   */\n      dup3\n        /* \"#utility.yul\":8694:8708   */\n      add\n        /* \"#utility.yul\":8687:8729   */\n      mstore\n        /* \"#utility.yul\":8570:8736   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8742:9108   */\n    tag_172:\n        /* \"#utility.yul\":8884:8887   */\n      0x00\n        /* \"#utility.yul\":8905:8972   */\n      tag_266\n        /* \"#utility.yul\":8969:8971   */\n      0x10\n        /* \"#utility.yul\":8964:8967   */\n      dup4\n        /* \"#utility.yul\":8905:8972   */\n      tag_161\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8898:8972   */\n      swap2\n      pop\n        /* \"#utility.yul\":8981:9074   */\n      tag_267\n        /* \"#utility.yul\":9070:9073   */\n      dup3\n        /* \"#utility.yul\":8981:9074   */\n      tag_171\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9099:9101   */\n      0x20\n        /* \"#utility.yul\":9094:9097   */\n      dup3\n        /* \"#utility.yul\":9090:9102   */\n      add\n        /* \"#utility.yul\":9083:9102   */\n      swap1\n      pop\n        /* \"#utility.yul\":8742:9108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9114:9533   */\n    tag_95:\n        /* \"#utility.yul\":9280:9284   */\n      0x00\n        /* \"#utility.yul\":9318:9320   */\n      0x20\n        /* \"#utility.yul\":9307:9316   */\n      dup3\n        /* \"#utility.yul\":9303:9321   */\n      add\n        /* \"#utility.yul\":9295:9321   */\n      swap1\n      pop\n        /* \"#utility.yul\":9367:9376   */\n      dup2\n        /* \"#utility.yul\":9361:9365   */\n      dup2\n        /* \"#utility.yul\":9357:9377   */\n      sub\n        /* \"#utility.yul\":9353:9354   */\n      0x00\n        /* \"#utility.yul\":9342:9351   */\n      dup4\n        /* \"#utility.yul\":9338:9355   */\n      add\n        /* \"#utility.yul\":9331:9378   */\n      mstore\n        /* \"#utility.yul\":9395:9526   */\n      tag_269\n        /* \"#utility.yul\":9521:9525   */\n      dup2\n        /* \"#utility.yul\":9395:9526   */\n      tag_172\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9387:9526   */\n      swap1\n      pop\n        /* \"#utility.yul\":9114:9533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9539:9706   */\n    tag_173:\n        /* \"#utility.yul\":9679:9698   */\n      0x496e76616c696420626f6e642074797065000000000000000000000000000000\n        /* \"#utility.yul\":9675:9676   */\n      0x00\n        /* \"#utility.yul\":9667:9673   */\n      dup3\n        /* \"#utility.yul\":9663:9677   */\n      add\n        /* \"#utility.yul\":9656:9699   */\n      mstore\n        /* \"#utility.yul\":9539:9706   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9712:10078   */\n    tag_174:\n        /* \"#utility.yul\":9854:9857   */\n      0x00\n        /* \"#utility.yul\":9875:9942   */\n      tag_272\n        /* \"#utility.yul\":9939:9941   */\n      0x11\n        /* \"#utility.yul\":9934:9937   */\n      dup4\n        /* \"#utility.yul\":9875:9942   */\n      tag_161\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9868:9942   */\n      swap2\n      pop\n        /* \"#utility.yul\":9951:10044   */\n      tag_273\n        /* \"#utility.yul\":10040:10043   */\n      dup3\n        /* \"#utility.yul\":9951:10044   */\n      tag_173\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10069:10071   */\n      0x20\n        /* \"#utility.yul\":10064:10067   */\n      dup3\n        /* \"#utility.yul\":10060:10072   */\n      add\n        /* \"#utility.yul\":10053:10072   */\n      swap1\n      pop\n        /* \"#utility.yul\":9712:10078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10084:10503   */\n    tag_119:\n        /* \"#utility.yul\":10250:10254   */\n      0x00\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"#utility.yul\":10277:10286   */\n      dup3\n        /* \"#utility.yul\":10273:10291   */\n      add\n        /* \"#utility.yul\":10265:10291   */\n      swap1\n      pop\n        /* \"#utility.yul\":10337:10346   */\n      dup2\n        /* \"#utility.yul\":10331:10335   */\n      dup2\n        /* \"#utility.yul\":10327:10347   */\n      sub\n        /* \"#utility.yul\":10323:10324   */\n      0x00\n        /* \"#utility.yul\":10312:10321   */\n      dup4\n        /* \"#utility.yul\":10308:10325   */\n      add\n        /* \"#utility.yul\":10301:10348   */\n      mstore\n        /* \"#utility.yul\":10365:10496   */\n      tag_275\n        /* \"#utility.yul\":10491:10495   */\n      dup2\n        /* \"#utility.yul\":10365:10496   */\n      tag_174\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10357:10496   */\n      swap1\n      pop\n        /* \"#utility.yul\":10084:10503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10509:10841   */\n    tag_123:\n        /* \"#utility.yul\":10630:10634   */\n      0x00\n        /* \"#utility.yul\":10668:10670   */\n      0x40\n        /* \"#utility.yul\":10657:10666   */\n      dup3\n        /* \"#utility.yul\":10653:10671   */\n      add\n        /* \"#utility.yul\":10645:10671   */\n      swap1\n      pop\n        /* \"#utility.yul\":10681:10752   */\n      tag_277\n        /* \"#utility.yul\":10749:10750   */\n      0x00\n        /* \"#utility.yul\":10738:10747   */\n      dup4\n        /* \"#utility.yul\":10734:10751   */\n      add\n        /* \"#utility.yul\":10725:10731   */\n      dup6\n        /* \"#utility.yul\":10681:10752   */\n      tag_152\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10762:10834   */\n      tag_278\n        /* \"#utility.yul\":10830:10832   */\n      0x20\n        /* \"#utility.yul\":10819:10828   */\n      dup4\n        /* \"#utility.yul\":10815:10833   */\n      add\n        /* \"#utility.yul\":10806:10812   */\n      dup5\n        /* \"#utility.yul\":10762:10834   */\n      tag_152\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10509:10841   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209655edcda10c7aaa6884ac9c4617494ed6f6eb85d0ba8fcaa946f759e4838c7364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1006": {
									"entryPoint": null,
									"id": 1006,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 378,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1863:7",
										"nodeType": "YulBlock",
										"src": "0:1863:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "956:552:7",
													"nodeType": "YulBlock",
													"src": "956:552:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:7",
																"nodeType": "YulBlock",
																"src": "1002:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:7"
																			},
																			"nativeSrc": "1004:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:7"
																		},
																		"nativeSrc": "1004:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:7"
																		},
																		"nativeSrc": "973:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:7",
																		"nodeType": "YulLiteral",
																		"src": "998:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:7"
																},
																"nativeSrc": "969:32:7",
																"nodeType": "YulFunctionCall",
																"src": "969:32:7"
															},
															"nativeSrc": "966:119:7",
															"nodeType": "YulIf",
															"src": "966:119:7"
														},
														{
															"nativeSrc": "1095:128:7",
															"nodeType": "YulBlock",
															"src": "1095:128:7",
															"statements": [
																{
																	"nativeSrc": "1110:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:7"
																				},
																				"nativeSrc": "1181:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:7"
																		},
																		"nativeSrc": "1149:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:7",
															"nodeType": "YulBlock",
															"src": "1233:129:7",
															"statements": [
																{
																	"nativeSrc": "1248:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:7"
																				},
																				"nativeSrc": "1320:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:7"
																		},
																		"nativeSrc": "1288:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:7",
															"nodeType": "YulBlock",
															"src": "1372:129:7",
															"statements": [
																{
																	"nativeSrc": "1387:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:7"
																				},
																				"nativeSrc": "1459:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:7"
																		},
																		"nativeSrc": "1427:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:7",
														"nodeType": "YulTypedName",
														"src": "910:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:7",
														"nodeType": "YulTypedName",
														"src": "921:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:7",
														"nodeType": "YulTypedName",
														"src": "933:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:7",
														"nodeType": "YulTypedName",
														"src": "941:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:7",
														"nodeType": "YulTypedName",
														"src": "949:6:7",
														"type": ""
													}
												],
												"src": "845:663:7"
											},
											{
												"body": {
													"nativeSrc": "1579:53:7",
													"nodeType": "YulBlock",
													"src": "1579:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1596:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1619:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1601:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1601:17:7"
																		},
																		"nativeSrc": "1601:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:7"
																},
																"nativeSrc": "1589:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1589:37:7"
															},
															"nativeSrc": "1589:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1589:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1514:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1567:5:7",
														"nodeType": "YulTypedName",
														"src": "1567:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1574:3:7",
														"nodeType": "YulTypedName",
														"src": "1574:3:7",
														"type": ""
													}
												],
												"src": "1514:118:7"
											},
											{
												"body": {
													"nativeSrc": "1736:124:7",
													"nodeType": "YulBlock",
													"src": "1736:124:7",
													"statements": [
														{
															"nativeSrc": "1746:26:7",
															"nodeType": "YulAssignment",
															"src": "1746:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1758:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1754:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:7"
																},
																"nativeSrc": "1754:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1754:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1746:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1826:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1850:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1850:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:7"
																		},
																		"nativeSrc": "1835:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1782:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1782:43:7"
																},
																"nativeSrc": "1782:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1782:71:7"
															},
															"nativeSrc": "1782:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1782:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1638:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1708:9:7",
														"nodeType": "YulTypedName",
														"src": "1708:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1720:6:7",
														"nodeType": "YulTypedName",
														"src": "1720:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1731:4:7",
														"nodeType": "YulTypedName",
														"src": "1731:4:7",
														"type": ""
													}
												],
												"src": "1638:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161144038038061144083398181016040528101906100319190610299565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102f8565b60405180910390fd5b6100b18161017a60201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050610311565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102688261023f565b9050919050565b6102788161025e565b8114610282575f80fd5b50565b5f815190506102938161026f565b92915050565b5f805f606084860312156102b0576102af61023b565b5b5f6102bd86828701610285565b93505060206102ce86828701610285565b92505060406102df86828701610285565b9150509250925092565b6102f28161025e565b82525050565b5f60208201905061030b5f8301846102e9565b92915050565b6111228061031e5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063be22f5461161006f578063be22f5461461012b578063cc7b6c6314610149578063e4c4025414610165578063e8981c6614610181578063efc378731461019f578063f2fde38b146101bb576100a7565b8063590fdbe1146100ab578063715018a6146100c95780638da5cb5b146100d3578063af294a36146100f1578063b53220c11461010f575b5f80fd5b6100b36101d7565b6040516100c09190610c81565b60405180910390f35b6100d16101fc565b005b6100db61020f565b6040516100e89190610cba565b60405180910390f35b6100f9610236565b6040516101069190610ceb565b60405180910390f35b61012960048036038101906101249190610d32565b610245565b005b61013361053c565b6040516101409190610c81565b60405180910390f35b610163600480360381019061015e9190610d32565b610561565b005b61017f600480360381019061017a9190610d32565b61072c565b005b610189610935565b6040516101969190610c81565b60405180910390f35b6101b960048036038101906101b49190610d32565b61095a565b005b6101d560048036038101906101d09190610d87565b610a08565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610204610a8c565b61020d5f610b13565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f670de0b6b3a7640000905090565b8060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102a09190610cba565b602060405180830381865afa1580156102bb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102df9190610dc6565b1015610320576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031790610e4b565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161037e93929190610e69565b6020604051808303815f875af115801561039a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103be9190610ed3565b6103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f490610f48565b60405180910390fd5b670de0b6b3a764000061040e610236565b1161044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044590610fb0565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104aa929190610fce565b6020604051808303815f875af11580156104c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ea9190610ed3565b503373ffffffffffffffffffffffffffffffffffffffff167fa577f0b609bbaa3578ef39f3c60d91dd8fa91cdf1725aded5d005dfca8a638f8826040516105319190610ceb565b60405180910390a250565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105bc9190610cba565b602060405180830381865afa1580156105d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105fb9190610dc6565b101561063c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106339061103f565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161069a93929190610e69565b6020604051808303815f875af11580156106b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106da9190610ed3565b503373ffffffffffffffffffffffffffffffffffffffff167f7d5463a42dc0f5beb958d684268ce85d26bcd53a33e7d1398a49125108faab45826040516107219190610ceb565b60405180910390a250565b8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107879190610cba565b602060405180830381865afa1580156107a2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107c69190610dc6565b1015610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe9061103f565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161086593929190610e69565b6020604051808303815f875af1158015610881573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a59190610ed3565b6108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db90610f48565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f2da0223090a78fe05410afe8bffe41fce0d1f36895479de9f0e97dd0b3ae14688260405161092a9190610ceb565b60405180910390a250565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018114806109695750600281145b6109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f906110a7565b60405180910390fd5b5f6109b282610bd4565b90503373ffffffffffffffffffffffffffffffffffffffff167fc7f101cd893547ed94b213df84d6f6c162b79d94f012e0939358b1e2aabbb0f182846040516109fc9291906110c5565b60405180910390a25050565b610a10610a8c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a80575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a779190610cba565b60405180910390fd5b610a8981610b13565b50565b610a94610c00565b73ffffffffffffffffffffffffffffffffffffffff16610ab261020f565b73ffffffffffffffffffffffffffffffffffffffff1614610b1157610ad5610c00565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b089190610cba565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60018203610be65760199050610bfb565b60028203610bf757603c9050610bfb565b5f90505b919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610c49610c44610c3f84610c07565b610c26565b610c07565b9050919050565b5f610c5a82610c2f565b9050919050565b5f610c6b82610c50565b9050919050565b610c7b81610c61565b82525050565b5f602082019050610c945f830184610c72565b92915050565b5f610ca482610c07565b9050919050565b610cb481610c9a565b82525050565b5f602082019050610ccd5f830184610cab565b92915050565b5f819050919050565b610ce581610cd3565b82525050565b5f602082019050610cfe5f830184610cdc565b92915050565b5f80fd5b610d1181610cd3565b8114610d1b575f80fd5b50565b5f81359050610d2c81610d08565b92915050565b5f60208284031215610d4757610d46610d04565b5b5f610d5484828501610d1e565b91505092915050565b610d6681610c9a565b8114610d70575f80fd5b50565b5f81359050610d8181610d5d565b92915050565b5f60208284031215610d9c57610d9b610d04565b5b5f610da984828501610d73565b91505092915050565b5f81519050610dc081610d08565b92915050565b5f60208284031215610ddb57610dda610d04565b5b5f610de884828501610db2565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e7420444149000000000000000000000000000000005f82015250565b5f610e35601083610df1565b9150610e4082610e01565b602082019050919050565b5f6020820190508181035f830152610e6281610e29565b9050919050565b5f606082019050610e7c5f830186610cab565b610e896020830185610cab565b610e966040830184610cdc565b949350505050565b5f8115159050919050565b610eb281610e9e565b8114610ebc575f80fd5b50565b5f81519050610ecd81610ea9565b92915050565b5f60208284031215610ee857610ee7610d04565b5b5f610ef584828501610ebf565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610f32600f83610df1565b9150610f3d82610efe565b602082019050919050565b5f6020820190508181035f830152610f5f81610f26565b9050919050565b7f444149207072696365206d757374206265203e202431000000000000000000005f82015250565b5f610f9a601683610df1565b9150610fa582610f66565b602082019050919050565b5f6020820190508181035f830152610fc781610f8e565b9050919050565b5f604082019050610fe15f830185610cab565b610fee6020830184610cdc565b9392505050565b7f496e73756666696369656e7420445047000000000000000000000000000000005f82015250565b5f611029601083610df1565b915061103482610ff5565b602082019050919050565b5f6020820190508181035f8301526110568161101d565b9050919050565b7f496e76616c696420626f6e6420747970650000000000000000000000000000005f82015250565b5f611091601183610df1565b915061109c8261105d565b602082019050919050565b5f6020820190508181035f8301526110be81611085565b9050919050565b5f6040820190506110d85f830185610cdc565b6110e56020830184610cdc565b939250505056fea26469706673582212209655edcda10c7aaa6884ac9c4617494ed6f6eb85d0ba8fcaa946f759e4838c7364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1440 CODESIZE SUB DUP1 PUSH2 0x1440 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x299 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x17A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x311 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x268 DUP3 PUSH2 0x23F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x278 DUP2 PUSH2 0x25E JUMP JUMPDEST DUP2 EQ PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x293 DUP2 PUSH2 0x26F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x23B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BD DUP7 DUP3 DUP8 ADD PUSH2 0x285 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2CE DUP7 DUP3 DUP8 ADD PUSH2 0x285 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2DF DUP7 DUP3 DUP8 ADD PUSH2 0x285 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2F2 DUP2 PUSH2 0x25E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30B PUSH0 DUP4 ADD DUP5 PUSH2 0x2E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1122 DUP1 PUSH2 0x31E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBE22F546 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xCC7B6C63 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xE4C40254 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE8981C66 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xEFC37873 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BB JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x590FDBE1 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xAF294A36 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xB53220C1 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x20D PUSH0 PUSH2 0xB13 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST LT ISZERO PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x317 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x40E PUSH2 0x236 JUMP JUMPDEST GT PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA577F0B609BBAA3578EF39F3C60D91DD8FA91CDF1725ADED5D005DFCA8A638F8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST LT ISZERO PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x633 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7D5463A42DC0F5BEB958D684268CE85D26BCD53A33E7D1398A49125108FAAB45 DUP3 PUSH1 0x40 MLOAD PUSH2 0x721 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST LT ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA0223090A78FE05410AFE8BFFE41FCE0D1F36895479DE9F0E97DD0B3AE1468 DUP3 PUSH1 0x40 MLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x969 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x9B2 DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7F101CD893547ED94B213DF84D6F6C162B79D94F012E0939358B1E2AABBB0F1 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9FC SWAP3 SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xA8C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA80 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA77 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA89 DUP2 PUSH2 0xB13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA94 PUSH2 0xC00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 PUSH2 0x20F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB11 JUMPI PUSH2 0xAD5 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0xBE6 JUMPI PUSH1 0x19 SWAP1 POP PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0xBF7 JUMPI PUSH1 0x3C SWAP1 POP PUSH2 0xBFB JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC49 PUSH2 0xC44 PUSH2 0xC3F DUP5 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5A DUP3 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6B DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7B DUP2 PUSH2 0xC61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC94 PUSH0 DUP4 ADD DUP5 PUSH2 0xC72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCA4 DUP3 PUSH2 0xC07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB4 DUP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCD PUSH0 DUP4 ADD DUP5 PUSH2 0xCAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE5 DUP2 PUSH2 0xCD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFE PUSH0 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD11 DUP2 PUSH2 0xCD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xD1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD2C DUP2 PUSH2 0xD08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xD04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD54 DUP5 DUP3 DUP6 ADD PUSH2 0xD1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xC9A JUMP JUMPDEST DUP2 EQ PUSH2 0xD70 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD81 DUP2 PUSH2 0xD5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xD04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDA9 DUP5 DUP3 DUP6 ADD PUSH2 0xD73 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDC0 DUP2 PUSH2 0xD08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDB JUMPI PUSH2 0xDDA PUSH2 0xD04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDE8 DUP5 DUP3 DUP6 ADD PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742044414900000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE35 PUSH1 0x10 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE40 DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE62 DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE7C PUSH0 DUP4 ADD DUP7 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0xE89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0xE96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB2 DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP2 EQ PUSH2 0xEBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xECD DUP2 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE8 JUMPI PUSH2 0xEE7 PUSH2 0xD04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF5 DUP5 DUP3 DUP6 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF32 PUSH1 0xF DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xF3D DUP3 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF5F DUP2 PUSH2 0xF26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x444149207072696365206D757374206265203E20243100000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF9A PUSH1 0x16 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA5 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFC7 DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE1 PUSH0 DUP4 ADD DUP6 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0xFEE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742044504700000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1029 PUSH1 0x10 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1034 DUP3 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1056 DUP2 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420626F6E642074797065000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1091 PUSH1 0x11 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x109C DUP3 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10BE DUP2 PUSH2 0x1085 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10D8 PUSH0 DUP4 ADD DUP6 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x10E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SSTORE 0xED 0xCD LOG1 0xC PUSH27 0xAA6884AC9C4617494ED6F6EB85D0BA8FCAA946F759E4838C736473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "174:2994:6:-:0;;;676:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;753:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;793:9:6::1;776:8;;:27;;;;;;;;;;;;;;;;;;831:9;814:8;;:27;;;;;;;;;;;;;;;;;;869:9;852:8;;:27;;;;;;;;;;;;;;;;;;676:211:::0;;;174:2994;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:118::-;1601:24;1619:5;1601:24;:::i;:::-;1596:3;1589:37;1514:118;;:::o;1638:222::-;1731:4;1769:2;1758:9;1754:18;1746:26;;1782:71;1850:1;1839:9;1835:17;1826:6;1782:71;:::i;:::-;1638:222;;;;:::o;174:2994:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2700,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3072,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2835,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burnDPG_1096": {
									"entryPoint": 1836,
									"id": 1096,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateBond_1185": {
									"entryPoint": 3028,
									"id": 1185,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@daiToken_945": {
									"entryPoint": 1340,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dpbToken_948": {
									"entryPoint": 2357,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dpgToken_942": {
									"entryPoint": 471,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDAIPrice_1193": {
									"entryPoint": 566,
									"id": 1193,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@issueBond_1161": {
									"entryPoint": 2394,
									"id": 1161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintDPG_1059": {
									"entryPoint": 581,
									"id": 1059,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 527,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 508,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeDPG_1131": {
									"entryPoint": 1377,
									"id": 1131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2568,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack": {
									"entryPoint": 3186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3689,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed": {
									"entryPoint": 3201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$799_to_t_address": {
									"entryPoint": 3169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 3838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b": {
									"entryPoint": 4085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10844:7",
										"nodeType": "YulBlock",
										"src": "0:10844:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:7",
													"nodeType": "YulBlock",
													"src": "52:81:7",
													"statements": [
														{
															"nativeSrc": "62:65:7",
															"nodeType": "YulAssignment",
															"src": "62:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:7",
																		"nodeType": "YulLiteral",
																		"src": "84:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:7"
																},
																"nativeSrc": "73:54:7",
																"nodeType": "YulFunctionCall",
																"src": "73:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:126:7"
											},
											{
												"body": {
													"nativeSrc": "171:28:7",
													"nodeType": "YulBlock",
													"src": "171:28:7",
													"statements": [
														{
															"nativeSrc": "181:12:7",
															"nodeType": "YulAssignment",
															"src": "181:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:7",
																"nodeType": "YulIdentifier",
																"src": "188:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:7",
														"nodeType": "YulTypedName",
														"src": "157:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:7",
														"nodeType": "YulTypedName",
														"src": "167:3:7",
														"type": ""
													}
												],
												"src": "139:60:7"
											},
											{
												"body": {
													"nativeSrc": "265:82:7",
													"nodeType": "YulBlock",
													"src": "265:82:7",
													"statements": [
														{
															"nativeSrc": "275:66:7",
															"nodeType": "YulAssignment",
															"src": "275:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:7"
																				},
																				"nativeSrc": "315:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:7"
																		},
																		"nativeSrc": "306:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:7"
																},
																"nativeSrc": "288:53:7",
																"nodeType": "YulFunctionCall",
																"src": "288:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:7",
														"nodeType": "YulTypedName",
														"src": "245:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:7",
														"nodeType": "YulTypedName",
														"src": "255:9:7",
														"type": ""
													}
												],
												"src": "205:142:7"
											},
											{
												"body": {
													"nativeSrc": "413:66:7",
													"nodeType": "YulBlock",
													"src": "413:66:7",
													"statements": [
														{
															"nativeSrc": "423:50:7",
															"nodeType": "YulAssignment",
															"src": "423:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:7"
																},
																"nativeSrc": "436:37:7",
																"nodeType": "YulFunctionCall",
																"src": "436:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:7",
														"nodeType": "YulTypedName",
														"src": "393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:7",
														"nodeType": "YulTypedName",
														"src": "403:9:7",
														"type": ""
													}
												],
												"src": "353:126:7"
											},
											{
												"body": {
													"nativeSrc": "558:66:7",
													"nodeType": "YulBlock",
													"src": "558:66:7",
													"statements": [
														{
															"nativeSrc": "568:50:7",
															"nodeType": "YulAssignment",
															"src": "568:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "612:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "612:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "581:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "581:30:7"
																},
																"nativeSrc": "581:37:7",
																"nodeType": "YulFunctionCall",
																"src": "581:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "568:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "568:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$799_to_t_address",
												"nativeSrc": "485:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "538:5:7",
														"nodeType": "YulTypedName",
														"src": "538:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "548:9:7",
														"nodeType": "YulTypedName",
														"src": "548:9:7",
														"type": ""
													}
												],
												"src": "485:139:7"
											},
											{
												"body": {
													"nativeSrc": "708:79:7",
													"nodeType": "YulBlock",
													"src": "708:79:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "725:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "725:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$799_to_t_address",
																			"nativeSrc": "730:43:7",
																			"nodeType": "YulIdentifier",
																			"src": "730:43:7"
																		},
																		"nativeSrc": "730:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "730:50:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "718:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:7"
																},
																"nativeSrc": "718:63:7",
																"nodeType": "YulFunctionCall",
																"src": "718:63:7"
															},
															"nativeSrc": "718:63:7",
															"nodeType": "YulExpressionStatement",
															"src": "718:63:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
												"nativeSrc": "630:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "696:5:7",
														"nodeType": "YulTypedName",
														"src": "696:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "703:3:7",
														"nodeType": "YulTypedName",
														"src": "703:3:7",
														"type": ""
													}
												],
												"src": "630:157:7"
											},
											{
												"body": {
													"nativeSrc": "904:137:7",
													"nodeType": "YulBlock",
													"src": "904:137:7",
													"statements": [
														{
															"nativeSrc": "914:26:7",
															"nodeType": "YulAssignment",
															"src": "914:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "926:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "926:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "937:2:7",
																		"nodeType": "YulLiteral",
																		"src": "937:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "922:3:7"
																},
																"nativeSrc": "922:18:7",
																"nodeType": "YulFunctionCall",
																"src": "922:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "914:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "914:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1007:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1007:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1020:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1020:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1031:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1031:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:7"
																		},
																		"nativeSrc": "1016:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack",
																	"nativeSrc": "950:56:7",
																	"nodeType": "YulIdentifier",
																	"src": "950:56:7"
																},
																"nativeSrc": "950:84:7",
																"nodeType": "YulFunctionCall",
																"src": "950:84:7"
															},
															"nativeSrc": "950:84:7",
															"nodeType": "YulExpressionStatement",
															"src": "950:84:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed",
												"nativeSrc": "793:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "876:9:7",
														"nodeType": "YulTypedName",
														"src": "876:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "888:6:7",
														"nodeType": "YulTypedName",
														"src": "888:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "899:4:7",
														"nodeType": "YulTypedName",
														"src": "899:4:7",
														"type": ""
													}
												],
												"src": "793:248:7"
											},
											{
												"body": {
													"nativeSrc": "1092:51:7",
													"nodeType": "YulBlock",
													"src": "1092:51:7",
													"statements": [
														{
															"nativeSrc": "1102:35:7",
															"nodeType": "YulAssignment",
															"src": "1102:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1131:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1131:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1113:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1113:17:7"
																},
																"nativeSrc": "1113:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1113:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1102:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1102:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1047:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1074:5:7",
														"nodeType": "YulTypedName",
														"src": "1074:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1084:7:7",
														"nodeType": "YulTypedName",
														"src": "1084:7:7",
														"type": ""
													}
												],
												"src": "1047:96:7"
											},
											{
												"body": {
													"nativeSrc": "1214:53:7",
													"nodeType": "YulBlock",
													"src": "1214:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1231:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1231:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1254:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1254:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1236:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1236:17:7"
																		},
																		"nativeSrc": "1236:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1236:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1224:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1224:6:7"
																},
																"nativeSrc": "1224:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1224:37:7"
															},
															"nativeSrc": "1224:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1224:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1149:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1202:5:7",
														"nodeType": "YulTypedName",
														"src": "1202:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1209:3:7",
														"nodeType": "YulTypedName",
														"src": "1209:3:7",
														"type": ""
													}
												],
												"src": "1149:118:7"
											},
											{
												"body": {
													"nativeSrc": "1371:124:7",
													"nodeType": "YulBlock",
													"src": "1371:124:7",
													"statements": [
														{
															"nativeSrc": "1381:26:7",
															"nodeType": "YulAssignment",
															"src": "1381:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1393:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1393:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1404:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1404:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1389:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1389:3:7"
																},
																"nativeSrc": "1389:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1389:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1381:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1381:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1461:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1461:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1474:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1474:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1485:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1485:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1470:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1470:3:7"
																		},
																		"nativeSrc": "1470:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1470:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1417:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:43:7"
																},
																"nativeSrc": "1417:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1417:71:7"
															},
															"nativeSrc": "1417:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1417:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1273:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1343:9:7",
														"nodeType": "YulTypedName",
														"src": "1343:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1355:6:7",
														"nodeType": "YulTypedName",
														"src": "1355:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1366:4:7",
														"nodeType": "YulTypedName",
														"src": "1366:4:7",
														"type": ""
													}
												],
												"src": "1273:222:7"
											},
											{
												"body": {
													"nativeSrc": "1546:32:7",
													"nodeType": "YulBlock",
													"src": "1546:32:7",
													"statements": [
														{
															"nativeSrc": "1556:16:7",
															"nodeType": "YulAssignment",
															"src": "1556:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1567:5:7",
																"nodeType": "YulIdentifier",
																"src": "1567:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1556:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1556:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1501:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1528:5:7",
														"nodeType": "YulTypedName",
														"src": "1528:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1538:7:7",
														"nodeType": "YulTypedName",
														"src": "1538:7:7",
														"type": ""
													}
												],
												"src": "1501:77:7"
											},
											{
												"body": {
													"nativeSrc": "1649:53:7",
													"nodeType": "YulBlock",
													"src": "1649:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1666:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1666:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1689:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1689:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1671:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1671:17:7"
																		},
																		"nativeSrc": "1671:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1671:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1659:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:7"
																},
																"nativeSrc": "1659:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1659:37:7"
															},
															"nativeSrc": "1659:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1659:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1584:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:7",
														"nodeType": "YulTypedName",
														"src": "1637:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1644:3:7",
														"nodeType": "YulTypedName",
														"src": "1644:3:7",
														"type": ""
													}
												],
												"src": "1584:118:7"
											},
											{
												"body": {
													"nativeSrc": "1806:124:7",
													"nodeType": "YulBlock",
													"src": "1806:124:7",
													"statements": [
														{
															"nativeSrc": "1816:26:7",
															"nodeType": "YulAssignment",
															"src": "1816:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1828:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1828:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1839:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1839:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1824:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1824:3:7"
																},
																"nativeSrc": "1824:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1824:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1816:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1816:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1896:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1896:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1909:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1909:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1920:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1920:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1905:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:7"
																		},
																		"nativeSrc": "1905:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1905:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1852:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1852:43:7"
																},
																"nativeSrc": "1852:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1852:71:7"
															},
															"nativeSrc": "1852:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1852:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1708:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1778:9:7",
														"nodeType": "YulTypedName",
														"src": "1778:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1790:6:7",
														"nodeType": "YulTypedName",
														"src": "1790:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1801:4:7",
														"nodeType": "YulTypedName",
														"src": "1801:4:7",
														"type": ""
													}
												],
												"src": "1708:222:7"
											},
											{
												"body": {
													"nativeSrc": "1976:35:7",
													"nodeType": "YulBlock",
													"src": "1976:35:7",
													"statements": [
														{
															"nativeSrc": "1986:19:7",
															"nodeType": "YulAssignment",
															"src": "1986:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2002:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2002:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1996:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1996:5:7"
																},
																"nativeSrc": "1996:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1996:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1986:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1986:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1936:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1969:6:7",
														"nodeType": "YulTypedName",
														"src": "1969:6:7",
														"type": ""
													}
												],
												"src": "1936:75:7"
											},
											{
												"body": {
													"nativeSrc": "2106:28:7",
													"nodeType": "YulBlock",
													"src": "2106:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2123:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2123:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2126:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2126:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2116:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2116:6:7"
																},
																"nativeSrc": "2116:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2116:12:7"
															},
															"nativeSrc": "2116:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2116:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2017:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2017:117:7"
											},
											{
												"body": {
													"nativeSrc": "2229:28:7",
													"nodeType": "YulBlock",
													"src": "2229:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2246:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2246:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2249:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2249:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:7"
																},
																"nativeSrc": "2239:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2239:12:7"
															},
															"nativeSrc": "2239:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2239:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2140:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2140:117:7"
											},
											{
												"body": {
													"nativeSrc": "2306:79:7",
													"nodeType": "YulBlock",
													"src": "2306:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2363:16:7",
																"nodeType": "YulBlock",
																"src": "2363:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2372:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2365:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:7"
																			},
																			"nativeSrc": "2365:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2365:12:7"
																		},
																		"nativeSrc": "2365:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2365:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2329:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2329:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2354:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2354:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2336:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2336:17:7"
																				},
																				"nativeSrc": "2336:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2336:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2326:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2326:2:7"
																		},
																		"nativeSrc": "2326:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2319:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:7"
																},
																"nativeSrc": "2319:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2319:43:7"
															},
															"nativeSrc": "2316:63:7",
															"nodeType": "YulIf",
															"src": "2316:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2263:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2299:5:7",
														"nodeType": "YulTypedName",
														"src": "2299:5:7",
														"type": ""
													}
												],
												"src": "2263:122:7"
											},
											{
												"body": {
													"nativeSrc": "2443:87:7",
													"nodeType": "YulBlock",
													"src": "2443:87:7",
													"statements": [
														{
															"nativeSrc": "2453:29:7",
															"nodeType": "YulAssignment",
															"src": "2453:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2475:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2475:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2462:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2462:12:7"
																},
																"nativeSrc": "2462:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2462:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2453:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2453:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2518:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2518:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2491:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2491:26:7"
																},
																"nativeSrc": "2491:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2491:33:7"
															},
															"nativeSrc": "2491:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2491:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2391:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2421:6:7",
														"nodeType": "YulTypedName",
														"src": "2421:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2429:3:7",
														"nodeType": "YulTypedName",
														"src": "2429:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2437:5:7",
														"nodeType": "YulTypedName",
														"src": "2437:5:7",
														"type": ""
													}
												],
												"src": "2391:139:7"
											},
											{
												"body": {
													"nativeSrc": "2602:263:7",
													"nodeType": "YulBlock",
													"src": "2602:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2648:83:7",
																"nodeType": "YulBlock",
																"src": "2648:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2650:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2650:77:7"
																			},
																			"nativeSrc": "2650:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2650:79:7"
																		},
																		"nativeSrc": "2650:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2650:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2623:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2623:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2632:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2632:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2619:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:7"
																		},
																		"nativeSrc": "2619:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2619:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2644:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2644:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2615:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2615:3:7"
																},
																"nativeSrc": "2615:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2615:32:7"
															},
															"nativeSrc": "2612:119:7",
															"nodeType": "YulIf",
															"src": "2612:119:7"
														},
														{
															"nativeSrc": "2741:117:7",
															"nodeType": "YulBlock",
															"src": "2741:117:7",
															"statements": [
																{
																	"nativeSrc": "2756:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2756:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2770:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2770:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2760:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2760:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2785:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2785:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2820:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2820:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2831:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2831:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2816:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2816:3:7"
																				},
																				"nativeSrc": "2816:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2816:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2840:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2840:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2795:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2795:20:7"
																		},
																		"nativeSrc": "2795:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2795:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2785:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2785:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2536:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2572:9:7",
														"nodeType": "YulTypedName",
														"src": "2572:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2583:7:7",
														"nodeType": "YulTypedName",
														"src": "2583:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2595:6:7",
														"nodeType": "YulTypedName",
														"src": "2595:6:7",
														"type": ""
													}
												],
												"src": "2536:329:7"
											},
											{
												"body": {
													"nativeSrc": "2914:79:7",
													"nodeType": "YulBlock",
													"src": "2914:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2971:16:7",
																"nodeType": "YulBlock",
																"src": "2971:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2980:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2980:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2983:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2983:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2973:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2973:6:7"
																			},
																			"nativeSrc": "2973:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2973:12:7"
																		},
																		"nativeSrc": "2973:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2973:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2937:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2937:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2962:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2962:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2944:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2944:17:7"
																				},
																				"nativeSrc": "2944:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2944:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2934:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2934:2:7"
																		},
																		"nativeSrc": "2934:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2934:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2927:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2927:6:7"
																},
																"nativeSrc": "2927:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2927:43:7"
															},
															"nativeSrc": "2924:63:7",
															"nodeType": "YulIf",
															"src": "2924:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2871:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2907:5:7",
														"nodeType": "YulTypedName",
														"src": "2907:5:7",
														"type": ""
													}
												],
												"src": "2871:122:7"
											},
											{
												"body": {
													"nativeSrc": "3051:87:7",
													"nodeType": "YulBlock",
													"src": "3051:87:7",
													"statements": [
														{
															"nativeSrc": "3061:29:7",
															"nodeType": "YulAssignment",
															"src": "3061:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3083:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3083:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3070:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3070:12:7"
																},
																"nativeSrc": "3070:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3070:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3061:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3061:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3126:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3126:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3099:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3099:26:7"
																},
																"nativeSrc": "3099:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3099:33:7"
															},
															"nativeSrc": "3099:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3099:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2999:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3029:6:7",
														"nodeType": "YulTypedName",
														"src": "3029:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3037:3:7",
														"nodeType": "YulTypedName",
														"src": "3037:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3045:5:7",
														"nodeType": "YulTypedName",
														"src": "3045:5:7",
														"type": ""
													}
												],
												"src": "2999:139:7"
											},
											{
												"body": {
													"nativeSrc": "3210:263:7",
													"nodeType": "YulBlock",
													"src": "3210:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3256:83:7",
																"nodeType": "YulBlock",
																"src": "3256:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3258:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3258:77:7"
																			},
																			"nativeSrc": "3258:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3258:79:7"
																		},
																		"nativeSrc": "3258:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3258:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3231:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3231:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3240:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3240:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3227:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3227:3:7"
																		},
																		"nativeSrc": "3227:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3227:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3252:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3223:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:7"
																},
																"nativeSrc": "3223:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3223:32:7"
															},
															"nativeSrc": "3220:119:7",
															"nodeType": "YulIf",
															"src": "3220:119:7"
														},
														{
															"nativeSrc": "3349:117:7",
															"nodeType": "YulBlock",
															"src": "3349:117:7",
															"statements": [
																{
																	"nativeSrc": "3364:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3364:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3378:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3378:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3368:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3368:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3393:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3393:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3428:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3428:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3439:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3439:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3424:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3424:3:7"
																				},
																				"nativeSrc": "3424:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3424:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3448:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3448:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3403:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3403:20:7"
																		},
																		"nativeSrc": "3403:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3393:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3393:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3144:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3180:9:7",
														"nodeType": "YulTypedName",
														"src": "3180:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3191:7:7",
														"nodeType": "YulTypedName",
														"src": "3191:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3203:6:7",
														"nodeType": "YulTypedName",
														"src": "3203:6:7",
														"type": ""
													}
												],
												"src": "3144:329:7"
											},
											{
												"body": {
													"nativeSrc": "3542:80:7",
													"nodeType": "YulBlock",
													"src": "3542:80:7",
													"statements": [
														{
															"nativeSrc": "3552:22:7",
															"nodeType": "YulAssignment",
															"src": "3552:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3567:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3567:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3561:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3561:5:7"
																},
																"nativeSrc": "3561:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3561:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3552:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3552:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3610:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3610:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3583:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3583:26:7"
																},
																"nativeSrc": "3583:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3583:33:7"
															},
															"nativeSrc": "3583:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3583:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3479:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3520:6:7",
														"nodeType": "YulTypedName",
														"src": "3520:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3528:3:7",
														"nodeType": "YulTypedName",
														"src": "3528:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3536:5:7",
														"nodeType": "YulTypedName",
														"src": "3536:5:7",
														"type": ""
													}
												],
												"src": "3479:143:7"
											},
											{
												"body": {
													"nativeSrc": "3705:274:7",
													"nodeType": "YulBlock",
													"src": "3705:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3751:83:7",
																"nodeType": "YulBlock",
																"src": "3751:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3753:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3753:77:7"
																			},
																			"nativeSrc": "3753:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3753:79:7"
																		},
																		"nativeSrc": "3753:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3753:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3726:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3726:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3735:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3735:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3722:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3722:3:7"
																		},
																		"nativeSrc": "3722:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3747:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3747:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3718:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3718:3:7"
																},
																"nativeSrc": "3718:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3718:32:7"
															},
															"nativeSrc": "3715:119:7",
															"nodeType": "YulIf",
															"src": "3715:119:7"
														},
														{
															"nativeSrc": "3844:128:7",
															"nodeType": "YulBlock",
															"src": "3844:128:7",
															"statements": [
																{
																	"nativeSrc": "3859:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3859:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3873:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3873:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3863:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3863:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3888:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3888:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3934:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3934:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3945:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3945:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3930:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3930:3:7"
																				},
																				"nativeSrc": "3930:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3930:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3954:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3954:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3898:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3898:31:7"
																		},
																		"nativeSrc": "3898:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3898:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3888:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3888:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3628:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3675:9:7",
														"nodeType": "YulTypedName",
														"src": "3675:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3686:7:7",
														"nodeType": "YulTypedName",
														"src": "3686:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3698:6:7",
														"nodeType": "YulTypedName",
														"src": "3698:6:7",
														"type": ""
													}
												],
												"src": "3628:351:7"
											},
											{
												"body": {
													"nativeSrc": "4081:73:7",
													"nodeType": "YulBlock",
													"src": "4081:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4098:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4098:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4103:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4103:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4091:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:7"
																},
																"nativeSrc": "4091:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4091:19:7"
															},
															"nativeSrc": "4091:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "4091:19:7"
														},
														{
															"nativeSrc": "4119:29:7",
															"nodeType": "YulAssignment",
															"src": "4119:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4138:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4138:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4143:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4143:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4134:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4134:3:7"
																},
																"nativeSrc": "4134:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4134:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4119:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "4119:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3985:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4053:3:7",
														"nodeType": "YulTypedName",
														"src": "4053:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4058:6:7",
														"nodeType": "YulTypedName",
														"src": "4058:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4069:11:7",
														"nodeType": "YulTypedName",
														"src": "4069:11:7",
														"type": ""
													}
												],
												"src": "3985:169:7"
											},
											{
												"body": {
													"nativeSrc": "4266:60:7",
													"nodeType": "YulBlock",
													"src": "4266:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4288:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4288:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4296:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4296:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4284:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:7"
																		},
																		"nativeSrc": "4284:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4284:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420444149",
																		"kind": "string",
																		"nativeSrc": "4300:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4300:18:7",
																		"type": "",
																		"value": "Insufficient DAI"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4277:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:7"
																},
																"nativeSrc": "4277:42:7",
																"nodeType": "YulFunctionCall",
																"src": "4277:42:7"
															},
															"nativeSrc": "4277:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "4277:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c",
												"nativeSrc": "4160:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4258:6:7",
														"nodeType": "YulTypedName",
														"src": "4258:6:7",
														"type": ""
													}
												],
												"src": "4160:166:7"
											},
											{
												"body": {
													"nativeSrc": "4478:220:7",
													"nodeType": "YulBlock",
													"src": "4478:220:7",
													"statements": [
														{
															"nativeSrc": "4488:74:7",
															"nodeType": "YulAssignment",
															"src": "4488:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4554:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4554:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4559:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4559:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4495:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "4495:58:7"
																},
																"nativeSrc": "4495:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4495:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4488:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4488:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4660:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4660:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c",
																	"nativeSrc": "4571:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "4571:88:7"
																},
																"nativeSrc": "4571:93:7",
																"nodeType": "YulFunctionCall",
																"src": "4571:93:7"
															},
															"nativeSrc": "4571:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "4571:93:7"
														},
														{
															"nativeSrc": "4673:19:7",
															"nodeType": "YulAssignment",
															"src": "4673:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4684:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4684:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4689:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4689:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4680:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4680:3:7"
																},
																"nativeSrc": "4680:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4680:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4673:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4673:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4332:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4466:3:7",
														"nodeType": "YulTypedName",
														"src": "4466:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4474:3:7",
														"nodeType": "YulTypedName",
														"src": "4474:3:7",
														"type": ""
													}
												],
												"src": "4332:366:7"
											},
											{
												"body": {
													"nativeSrc": "4875:248:7",
													"nodeType": "YulBlock",
													"src": "4875:248:7",
													"statements": [
														{
															"nativeSrc": "4885:26:7",
															"nodeType": "YulAssignment",
															"src": "4885:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4897:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4897:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4908:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4908:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4893:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:7"
																},
																"nativeSrc": "4893:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4893:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4885:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4885:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4932:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4932:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4943:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4943:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4928:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4928:3:7"
																		},
																		"nativeSrc": "4928:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4928:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4951:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4951:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4957:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4957:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4947:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4947:3:7"
																		},
																		"nativeSrc": "4947:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4947:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:7"
																},
																"nativeSrc": "4921:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4921:47:7"
															},
															"nativeSrc": "4921:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4921:47:7"
														},
														{
															"nativeSrc": "4977:139:7",
															"nodeType": "YulAssignment",
															"src": "4977:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5111:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4985:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "4985:124:7"
																},
																"nativeSrc": "4985:131:7",
																"nodeType": "YulFunctionCall",
																"src": "4985:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4977:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4977:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4704:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4855:9:7",
														"nodeType": "YulTypedName",
														"src": "4855:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4870:4:7",
														"nodeType": "YulTypedName",
														"src": "4870:4:7",
														"type": ""
													}
												],
												"src": "4704:419:7"
											},
											{
												"body": {
													"nativeSrc": "5283:288:7",
													"nodeType": "YulBlock",
													"src": "5283:288:7",
													"statements": [
														{
															"nativeSrc": "5293:26:7",
															"nodeType": "YulAssignment",
															"src": "5293:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5305:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5305:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5316:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5316:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5301:3:7"
																},
																"nativeSrc": "5301:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5301:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5293:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5293:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5373:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5373:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5386:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5397:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5397:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5382:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:7"
																		},
																		"nativeSrc": "5382:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5382:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5329:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5329:43:7"
																},
																"nativeSrc": "5329:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5329:71:7"
															},
															"nativeSrc": "5329:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5329:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5454:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5454:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5467:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5467:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5478:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5478:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5463:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5463:3:7"
																		},
																		"nativeSrc": "5463:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5463:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5410:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5410:43:7"
																},
																"nativeSrc": "5410:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5410:72:7"
															},
															"nativeSrc": "5410:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5410:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5536:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5536:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5549:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5549:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5560:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5560:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5545:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5545:3:7"
																		},
																		"nativeSrc": "5545:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5545:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5492:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5492:43:7"
																},
																"nativeSrc": "5492:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5492:72:7"
															},
															"nativeSrc": "5492:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5492:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5129:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5239:9:7",
														"nodeType": "YulTypedName",
														"src": "5239:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5251:6:7",
														"nodeType": "YulTypedName",
														"src": "5251:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5259:6:7",
														"nodeType": "YulTypedName",
														"src": "5259:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5267:6:7",
														"nodeType": "YulTypedName",
														"src": "5267:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5278:4:7",
														"nodeType": "YulTypedName",
														"src": "5278:4:7",
														"type": ""
													}
												],
												"src": "5129:442:7"
											},
											{
												"body": {
													"nativeSrc": "5619:48:7",
													"nodeType": "YulBlock",
													"src": "5619:48:7",
													"statements": [
														{
															"nativeSrc": "5629:32:7",
															"nodeType": "YulAssignment",
															"src": "5629:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5654:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5654:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5647:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5647:6:7"
																		},
																		"nativeSrc": "5647:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5647:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5640:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5640:6:7"
																},
																"nativeSrc": "5640:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5640:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5629:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5629:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5577:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5601:5:7",
														"nodeType": "YulTypedName",
														"src": "5601:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5611:7:7",
														"nodeType": "YulTypedName",
														"src": "5611:7:7",
														"type": ""
													}
												],
												"src": "5577:90:7"
											},
											{
												"body": {
													"nativeSrc": "5713:76:7",
													"nodeType": "YulBlock",
													"src": "5713:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5767:16:7",
																"nodeType": "YulBlock",
																"src": "5767:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5776:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5776:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5779:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5779:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5769:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5769:6:7"
																			},
																			"nativeSrc": "5769:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5769:12:7"
																		},
																		"nativeSrc": "5769:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5769:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5736:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5736:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5758:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5758:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5743:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "5743:14:7"
																				},
																				"nativeSrc": "5743:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5743:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5733:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5733:2:7"
																		},
																		"nativeSrc": "5733:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5733:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:7"
																},
																"nativeSrc": "5726:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5726:40:7"
															},
															"nativeSrc": "5723:60:7",
															"nodeType": "YulIf",
															"src": "5723:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5673:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5706:5:7",
														"nodeType": "YulTypedName",
														"src": "5706:5:7",
														"type": ""
													}
												],
												"src": "5673:116:7"
											},
											{
												"body": {
													"nativeSrc": "5855:77:7",
													"nodeType": "YulBlock",
													"src": "5855:77:7",
													"statements": [
														{
															"nativeSrc": "5865:22:7",
															"nodeType": "YulAssignment",
															"src": "5865:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5880:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5880:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5874:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5874:5:7"
																},
																"nativeSrc": "5874:13:7",
																"nodeType": "YulFunctionCall",
																"src": "5874:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5865:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5865:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5920:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5920:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5896:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "5896:23:7"
																},
																"nativeSrc": "5896:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5896:30:7"
															},
															"nativeSrc": "5896:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5896:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5795:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5833:6:7",
														"nodeType": "YulTypedName",
														"src": "5833:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5841:3:7",
														"nodeType": "YulTypedName",
														"src": "5841:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5849:5:7",
														"nodeType": "YulTypedName",
														"src": "5849:5:7",
														"type": ""
													}
												],
												"src": "5795:137:7"
											},
											{
												"body": {
													"nativeSrc": "6012:271:7",
													"nodeType": "YulBlock",
													"src": "6012:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6058:83:7",
																"nodeType": "YulBlock",
																"src": "6058:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6060:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6060:77:7"
																			},
																			"nativeSrc": "6060:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6060:79:7"
																		},
																		"nativeSrc": "6060:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6060:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6033:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6033:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6042:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6029:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6029:3:7"
																		},
																		"nativeSrc": "6029:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6029:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6054:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6054:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6025:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6025:3:7"
																},
																"nativeSrc": "6025:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6025:32:7"
															},
															"nativeSrc": "6022:119:7",
															"nodeType": "YulIf",
															"src": "6022:119:7"
														},
														{
															"nativeSrc": "6151:125:7",
															"nodeType": "YulBlock",
															"src": "6151:125:7",
															"statements": [
																{
																	"nativeSrc": "6166:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6166:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6170:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6170:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6195:71:7",
																	"nodeType": "YulAssignment",
																	"src": "6195:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6238:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6238:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6249:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6249:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6234:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6234:3:7"
																				},
																				"nativeSrc": "6234:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6234:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6258:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6258:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6205:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "6205:28:7"
																		},
																		"nativeSrc": "6205:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6205:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6195:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6195:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5938:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5982:9:7",
														"nodeType": "YulTypedName",
														"src": "5982:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5993:7:7",
														"nodeType": "YulTypedName",
														"src": "5993:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6005:6:7",
														"nodeType": "YulTypedName",
														"src": "6005:6:7",
														"type": ""
													}
												],
												"src": "5938:345:7"
											},
											{
												"body": {
													"nativeSrc": "6395:59:7",
													"nodeType": "YulBlock",
													"src": "6395:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6417:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6417:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6425:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6425:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6413:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6413:3:7"
																		},
																		"nativeSrc": "6413:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6413:14:7"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "6429:17:7",
																		"nodeType": "YulLiteral",
																		"src": "6429:17:7",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6406:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6406:6:7"
																},
																"nativeSrc": "6406:41:7",
																"nodeType": "YulFunctionCall",
																"src": "6406:41:7"
															},
															"nativeSrc": "6406:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "6406:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "6289:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6387:6:7",
														"nodeType": "YulTypedName",
														"src": "6387:6:7",
														"type": ""
													}
												],
												"src": "6289:165:7"
											},
											{
												"body": {
													"nativeSrc": "6606:220:7",
													"nodeType": "YulBlock",
													"src": "6606:220:7",
													"statements": [
														{
															"nativeSrc": "6616:74:7",
															"nodeType": "YulAssignment",
															"src": "6616:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6682:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6682:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6687:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6687:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6623:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6623:58:7"
																},
																"nativeSrc": "6623:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6623:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6616:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6616:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6788:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6788:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "6699:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6699:88:7"
																},
																"nativeSrc": "6699:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6699:93:7"
															},
															"nativeSrc": "6699:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6699:93:7"
														},
														{
															"nativeSrc": "6801:19:7",
															"nodeType": "YulAssignment",
															"src": "6801:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6812:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6812:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6817:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6817:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6808:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6808:3:7"
																},
																"nativeSrc": "6808:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6808:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6801:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6460:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6594:3:7",
														"nodeType": "YulTypedName",
														"src": "6594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6602:3:7",
														"nodeType": "YulTypedName",
														"src": "6602:3:7",
														"type": ""
													}
												],
												"src": "6460:366:7"
											},
											{
												"body": {
													"nativeSrc": "7003:248:7",
													"nodeType": "YulBlock",
													"src": "7003:248:7",
													"statements": [
														{
															"nativeSrc": "7013:26:7",
															"nodeType": "YulAssignment",
															"src": "7013:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7025:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7025:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7036:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7036:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7021:3:7"
																},
																"nativeSrc": "7021:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7021:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7013:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7013:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7060:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7060:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7071:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7071:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7056:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7056:3:7"
																		},
																		"nativeSrc": "7056:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7056:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7079:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7079:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7085:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7085:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7075:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7075:3:7"
																		},
																		"nativeSrc": "7075:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7075:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7049:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7049:6:7"
																},
																"nativeSrc": "7049:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7049:47:7"
															},
															"nativeSrc": "7049:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7049:47:7"
														},
														{
															"nativeSrc": "7105:139:7",
															"nodeType": "YulAssignment",
															"src": "7105:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7239:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7239:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7113:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7113:124:7"
																},
																"nativeSrc": "7113:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7113:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7105:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7105:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6832:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6983:9:7",
														"nodeType": "YulTypedName",
														"src": "6983:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6998:4:7",
														"nodeType": "YulTypedName",
														"src": "6998:4:7",
														"type": ""
													}
												],
												"src": "6832:419:7"
											},
											{
												"body": {
													"nativeSrc": "7363:66:7",
													"nodeType": "YulBlock",
													"src": "7363:66:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7385:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7385:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7393:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7393:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7381:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7381:3:7"
																		},
																		"nativeSrc": "7381:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7381:14:7"
																	},
																	{
																		"hexValue": "444149207072696365206d757374206265203e202431",
																		"kind": "string",
																		"nativeSrc": "7397:24:7",
																		"nodeType": "YulLiteral",
																		"src": "7397:24:7",
																		"type": "",
																		"value": "DAI price must be > $1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7374:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7374:6:7"
																},
																"nativeSrc": "7374:48:7",
																"nodeType": "YulFunctionCall",
																"src": "7374:48:7"
															},
															"nativeSrc": "7374:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "7374:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e",
												"nativeSrc": "7257:172:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7355:6:7",
														"nodeType": "YulTypedName",
														"src": "7355:6:7",
														"type": ""
													}
												],
												"src": "7257:172:7"
											},
											{
												"body": {
													"nativeSrc": "7581:220:7",
													"nodeType": "YulBlock",
													"src": "7581:220:7",
													"statements": [
														{
															"nativeSrc": "7591:74:7",
															"nodeType": "YulAssignment",
															"src": "7591:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7657:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7657:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7662:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7662:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7598:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7598:58:7"
																},
																"nativeSrc": "7598:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7598:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7591:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7591:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7763:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7763:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e",
																	"nativeSrc": "7674:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7674:88:7"
																},
																"nativeSrc": "7674:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7674:93:7"
															},
															"nativeSrc": "7674:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7674:93:7"
														},
														{
															"nativeSrc": "7776:19:7",
															"nodeType": "YulAssignment",
															"src": "7776:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7787:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7787:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7792:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7792:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7783:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7783:3:7"
																},
																"nativeSrc": "7783:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7783:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7776:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7776:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7435:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7569:3:7",
														"nodeType": "YulTypedName",
														"src": "7569:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7577:3:7",
														"nodeType": "YulTypedName",
														"src": "7577:3:7",
														"type": ""
													}
												],
												"src": "7435:366:7"
											},
											{
												"body": {
													"nativeSrc": "7978:248:7",
													"nodeType": "YulBlock",
													"src": "7978:248:7",
													"statements": [
														{
															"nativeSrc": "7988:26:7",
															"nodeType": "YulAssignment",
															"src": "7988:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8000:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8000:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8011:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8011:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7996:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7996:3:7"
																},
																"nativeSrc": "7996:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7996:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7988:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7988:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8035:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8035:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8046:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8046:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8031:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8031:3:7"
																		},
																		"nativeSrc": "8031:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8031:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8054:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8054:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8060:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8060:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8050:3:7"
																		},
																		"nativeSrc": "8050:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8050:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8024:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8024:6:7"
																},
																"nativeSrc": "8024:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8024:47:7"
															},
															"nativeSrc": "8024:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8024:47:7"
														},
														{
															"nativeSrc": "8080:139:7",
															"nodeType": "YulAssignment",
															"src": "8080:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8214:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8214:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8088:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8088:124:7"
																},
																"nativeSrc": "8088:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8088:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8080:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8080:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7807:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7958:9:7",
														"nodeType": "YulTypedName",
														"src": "7958:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7973:4:7",
														"nodeType": "YulTypedName",
														"src": "7973:4:7",
														"type": ""
													}
												],
												"src": "7807:419:7"
											},
											{
												"body": {
													"nativeSrc": "8358:206:7",
													"nodeType": "YulBlock",
													"src": "8358:206:7",
													"statements": [
														{
															"nativeSrc": "8368:26:7",
															"nodeType": "YulAssignment",
															"src": "8368:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8380:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8380:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8391:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8391:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8376:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8376:3:7"
																},
																"nativeSrc": "8376:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8376:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8368:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8368:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8448:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8448:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8461:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8472:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8472:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8457:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8457:3:7"
																		},
																		"nativeSrc": "8457:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8457:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8404:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8404:43:7"
																},
																"nativeSrc": "8404:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8404:71:7"
															},
															"nativeSrc": "8404:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8404:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8529:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8529:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8542:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8542:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8553:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8553:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8538:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8538:3:7"
																		},
																		"nativeSrc": "8538:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8538:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8485:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8485:43:7"
																},
																"nativeSrc": "8485:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8485:72:7"
															},
															"nativeSrc": "8485:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8485:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8232:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8322:9:7",
														"nodeType": "YulTypedName",
														"src": "8322:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8334:6:7",
														"nodeType": "YulTypedName",
														"src": "8334:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8342:6:7",
														"nodeType": "YulTypedName",
														"src": "8342:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8353:4:7",
														"nodeType": "YulTypedName",
														"src": "8353:4:7",
														"type": ""
													}
												],
												"src": "8232:332:7"
											},
											{
												"body": {
													"nativeSrc": "8676:60:7",
													"nodeType": "YulBlock",
													"src": "8676:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8698:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8698:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8706:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8706:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8694:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8694:3:7"
																		},
																		"nativeSrc": "8694:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8694:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420445047",
																		"kind": "string",
																		"nativeSrc": "8710:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8710:18:7",
																		"type": "",
																		"value": "Insufficient DPG"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8687:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8687:6:7"
																},
																"nativeSrc": "8687:42:7",
																"nodeType": "YulFunctionCall",
																"src": "8687:42:7"
															},
															"nativeSrc": "8687:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "8687:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b",
												"nativeSrc": "8570:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8668:6:7",
														"nodeType": "YulTypedName",
														"src": "8668:6:7",
														"type": ""
													}
												],
												"src": "8570:166:7"
											},
											{
												"body": {
													"nativeSrc": "8888:220:7",
													"nodeType": "YulBlock",
													"src": "8888:220:7",
													"statements": [
														{
															"nativeSrc": "8898:74:7",
															"nodeType": "YulAssignment",
															"src": "8898:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8964:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8964:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8969:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8969:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8905:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8905:58:7"
																},
																"nativeSrc": "8905:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8905:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8898:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8898:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9070:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9070:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b",
																	"nativeSrc": "8981:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8981:88:7"
																},
																"nativeSrc": "8981:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8981:93:7"
															},
															"nativeSrc": "8981:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8981:93:7"
														},
														{
															"nativeSrc": "9083:19:7",
															"nodeType": "YulAssignment",
															"src": "9083:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9094:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9094:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9099:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9099:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9090:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9090:3:7"
																},
																"nativeSrc": "9090:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9090:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9083:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9083:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8742:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8876:3:7",
														"nodeType": "YulTypedName",
														"src": "8876:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8884:3:7",
														"nodeType": "YulTypedName",
														"src": "8884:3:7",
														"type": ""
													}
												],
												"src": "8742:366:7"
											},
											{
												"body": {
													"nativeSrc": "9285:248:7",
													"nodeType": "YulBlock",
													"src": "9285:248:7",
													"statements": [
														{
															"nativeSrc": "9295:26:7",
															"nodeType": "YulAssignment",
															"src": "9295:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9307:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9307:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9318:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9318:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9303:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9303:3:7"
																},
																"nativeSrc": "9303:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9303:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9295:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9295:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9342:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9342:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9353:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9353:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9338:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9338:3:7"
																		},
																		"nativeSrc": "9338:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9338:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9361:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9361:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9367:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9367:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9357:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9357:3:7"
																		},
																		"nativeSrc": "9357:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9357:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9331:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9331:6:7"
																},
																"nativeSrc": "9331:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9331:47:7"
															},
															"nativeSrc": "9331:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9331:47:7"
														},
														{
															"nativeSrc": "9387:139:7",
															"nodeType": "YulAssignment",
															"src": "9387:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9521:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9521:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9395:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9395:124:7"
																},
																"nativeSrc": "9395:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9395:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9387:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9387:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9114:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9265:9:7",
														"nodeType": "YulTypedName",
														"src": "9265:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9280:4:7",
														"nodeType": "YulTypedName",
														"src": "9280:4:7",
														"type": ""
													}
												],
												"src": "9114:419:7"
											},
											{
												"body": {
													"nativeSrc": "9645:61:7",
													"nodeType": "YulBlock",
													"src": "9645:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9667:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9663:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9663:3:7"
																		},
																		"nativeSrc": "9663:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420626f6e642074797065",
																		"kind": "string",
																		"nativeSrc": "9679:19:7",
																		"nodeType": "YulLiteral",
																		"src": "9679:19:7",
																		"type": "",
																		"value": "Invalid bond type"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9656:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9656:6:7"
																},
																"nativeSrc": "9656:43:7",
																"nodeType": "YulFunctionCall",
																"src": "9656:43:7"
															},
															"nativeSrc": "9656:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "9656:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b",
												"nativeSrc": "9539:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9637:6:7",
														"nodeType": "YulTypedName",
														"src": "9637:6:7",
														"type": ""
													}
												],
												"src": "9539:167:7"
											},
											{
												"body": {
													"nativeSrc": "9858:220:7",
													"nodeType": "YulBlock",
													"src": "9858:220:7",
													"statements": [
														{
															"nativeSrc": "9868:74:7",
															"nodeType": "YulAssignment",
															"src": "9868:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9934:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9934:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9939:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9939:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9875:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9875:58:7"
																},
																"nativeSrc": "9875:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9875:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9868:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9868:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10040:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10040:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b",
																	"nativeSrc": "9951:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:88:7"
																},
																"nativeSrc": "9951:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:93:7"
															},
															"nativeSrc": "9951:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9951:93:7"
														},
														{
															"nativeSrc": "10053:19:7",
															"nodeType": "YulAssignment",
															"src": "10053:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10064:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10064:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10069:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10069:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10060:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10060:3:7"
																},
																"nativeSrc": "10060:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10060:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10053:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10053:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9712:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9846:3:7",
														"nodeType": "YulTypedName",
														"src": "9846:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9854:3:7",
														"nodeType": "YulTypedName",
														"src": "9854:3:7",
														"type": ""
													}
												],
												"src": "9712:366:7"
											},
											{
												"body": {
													"nativeSrc": "10255:248:7",
													"nodeType": "YulBlock",
													"src": "10255:248:7",
													"statements": [
														{
															"nativeSrc": "10265:26:7",
															"nodeType": "YulAssignment",
															"src": "10265:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10277:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10288:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10273:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10273:3:7"
																},
																"nativeSrc": "10273:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10273:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10265:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10265:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10308:3:7"
																		},
																		"nativeSrc": "10308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10308:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10331:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10331:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10337:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10337:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10327:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10327:3:7"
																		},
																		"nativeSrc": "10327:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10327:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10301:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10301:6:7"
																},
																"nativeSrc": "10301:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10301:47:7"
															},
															"nativeSrc": "10301:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10301:47:7"
														},
														{
															"nativeSrc": "10357:139:7",
															"nodeType": "YulAssignment",
															"src": "10357:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10491:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10491:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10365:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10365:124:7"
																},
																"nativeSrc": "10365:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10365:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10357:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10357:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10084:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10235:9:7",
														"nodeType": "YulTypedName",
														"src": "10235:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10250:4:7",
														"nodeType": "YulTypedName",
														"src": "10250:4:7",
														"type": ""
													}
												],
												"src": "10084:419:7"
											},
											{
												"body": {
													"nativeSrc": "10635:206:7",
													"nodeType": "YulBlock",
													"src": "10635:206:7",
													"statements": [
														{
															"nativeSrc": "10645:26:7",
															"nodeType": "YulAssignment",
															"src": "10645:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10657:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10657:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10668:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10668:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10653:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10653:3:7"
																},
																"nativeSrc": "10653:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10653:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10645:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10645:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10725:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10725:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10738:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10738:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10749:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10749:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10734:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10734:3:7"
																		},
																		"nativeSrc": "10734:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10734:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10681:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10681:43:7"
																},
																"nativeSrc": "10681:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10681:71:7"
															},
															"nativeSrc": "10681:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10681:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10806:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10806:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10819:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10819:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10830:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10830:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10815:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10815:3:7"
																		},
																		"nativeSrc": "10815:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10815:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10762:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10762:43:7"
																},
																"nativeSrc": "10762:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10762:72:7"
															},
															"nativeSrc": "10762:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10762:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10509:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10599:9:7",
														"nodeType": "YulTypedName",
														"src": "10599:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10611:6:7",
														"nodeType": "YulTypedName",
														"src": "10611:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10619:6:7",
														"nodeType": "YulTypedName",
														"src": "10619:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10630:4:7",
														"nodeType": "YulTypedName",
														"src": "10630:4:7",
														"type": ""
													}
												],
												"src": "10509:332:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$799_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$799_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$799__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$799_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient DAI\")\n\n    }\n\n    function abi_encode_t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e(memPtr) {\n\n        mstore(add(memPtr, 0), \"DAI price must be > $1\")\n\n    }\n\n    function abi_encode_t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient DPG\")\n\n    }\n\n    function abi_encode_t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid bond type\")\n\n    }\n\n    function abi_encode_t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBE22F546 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xCC7B6C63 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xE4C40254 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xE8981C66 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xEFC37873 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BB JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x590FDBE1 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xAF294A36 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xB53220C1 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x20D PUSH0 PUSH2 0xB13 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST LT ISZERO PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x317 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x40E PUSH2 0x236 JUMP JUMPDEST GT PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA577F0B609BBAA3578EF39F3C60D91DD8FA91CDF1725ADED5D005DFCA8A638F8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST LT ISZERO PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x633 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7D5463A42DC0F5BEB958D684268CE85D26BCD53A33E7D1398A49125108FAAB45 DUP3 PUSH1 0x40 MLOAD PUSH2 0x721 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST LT ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA0223090A78FE05410AFE8BFFE41FCE0D1F36895479DE9F0E97DD0B3AE1468 DUP3 PUSH1 0x40 MLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x969 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x9B2 DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7F101CD893547ED94B213DF84D6F6C162B79D94F012E0939358B1E2AABBB0F1 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9FC SWAP3 SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xA8C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA80 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA77 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA89 DUP2 PUSH2 0xB13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA94 PUSH2 0xC00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 PUSH2 0x20F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB11 JUMPI PUSH2 0xAD5 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0xBE6 JUMPI PUSH1 0x19 SWAP1 POP PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0xBF7 JUMPI PUSH1 0x3C SWAP1 POP PUSH2 0xBFB JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC49 PUSH2 0xC44 PUSH2 0xC3F DUP5 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5A DUP3 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6B DUP3 PUSH2 0xC50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7B DUP2 PUSH2 0xC61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC94 PUSH0 DUP4 ADD DUP5 PUSH2 0xC72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCA4 DUP3 PUSH2 0xC07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB4 DUP2 PUSH2 0xC9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCD PUSH0 DUP4 ADD DUP5 PUSH2 0xCAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE5 DUP2 PUSH2 0xCD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFE PUSH0 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD11 DUP2 PUSH2 0xCD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xD1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD2C DUP2 PUSH2 0xD08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xD04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD54 DUP5 DUP3 DUP6 ADD PUSH2 0xD1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xC9A JUMP JUMPDEST DUP2 EQ PUSH2 0xD70 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD81 DUP2 PUSH2 0xD5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xD04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDA9 DUP5 DUP3 DUP6 ADD PUSH2 0xD73 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDC0 DUP2 PUSH2 0xD08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDB JUMPI PUSH2 0xDDA PUSH2 0xD04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDE8 DUP5 DUP3 DUP6 ADD PUSH2 0xDB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742044414900000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE35 PUSH1 0x10 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE40 DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE62 DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE7C PUSH0 DUP4 ADD DUP7 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0xE89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0xE96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB2 DUP2 PUSH2 0xE9E JUMP JUMPDEST DUP2 EQ PUSH2 0xEBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xECD DUP2 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE8 JUMPI PUSH2 0xEE7 PUSH2 0xD04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF5 DUP5 DUP3 DUP6 ADD PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF32 PUSH1 0xF DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xF3D DUP3 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF5F DUP2 PUSH2 0xF26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x444149207072696365206D757374206265203E20243100000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF9A PUSH1 0x16 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA5 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFC7 DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFE1 PUSH0 DUP4 ADD DUP6 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0xFEE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742044504700000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1029 PUSH1 0x10 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1034 DUP3 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1056 DUP2 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420626F6E642074797065000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1091 PUSH1 0x11 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x109C DUP3 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10BE DUP2 PUSH2 0x1085 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10D8 PUSH0 DUP4 ADD DUP6 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x10E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SSTORE 0xED 0xCD LOG1 0xC PUSH27 0xAA6884AC9C4617494ED6F6EB85D0BA8FCAA946F759E4838C736473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "174:2994:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2974:191:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;938:540;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;286:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1886:308;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1515:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;343:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2234:311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;235:21:6;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2974:191:6:-;3018:7;3107;3100:14;;2974:191;:::o;938:540::-;1034:7;1000:8;;;;;;;;;;;:18;;;1019:10;1000:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;992:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1081:8;;;;;;;;;;;:21;;;1103:10;1123:4;1130:7;1081:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1073:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1298:7;1282:13;:11;:13::i;:::-;:23;1274:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1388:8;;;;;;;;;;;:17;;;1406:10;1418:7;1388:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1450:10;1442:28;;;1462:7;1442:28;;;;;;:::i;:::-;;;;;;;;938:540;:::o;286:21::-;;;;;;;;;;;;;:::o;1886:308::-;1983:7;1949:8;;;;;;;;;;;:18;;;1968:10;1949:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;1941:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2022:8;;;;;;;;;;;:21;;;2044:10;2064:4;2071:7;2022:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2166:10;2157:29;;;2178:7;2157:29;;;;;;:::i;:::-;;;;;;;;1886:308;:::o;1515:322::-;1611:7;1577:8;;;;;;;;;;;:18;;;1596:10;1577:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;1569:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1658:8;;;;;;;;;;;:21;;;1680:10;1700:4;1707:7;1658:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1650:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:10;1801:28;;;1821:7;1801:28;;;;;;:::i;:::-;;;;;;;;1515:322;:::o;343:21::-;;;;;;;;;;;;;:::o;2234:311::-;2311:1;2299:8;:13;:30;;;;2328:1;2316:8;:13;2299:30;2291:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2364:18;2385:23;2399:8;2385:13;:23::i;:::-;2364:44;;2504:10;2493:44;;;2516:10;2528:8;2493:44;;;;;;;:::i;:::-;;;;;;;;2280:265;2234:311;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2634:286:6:-;2698:7;2734:1;2722:8;:13;2718:176;;2759:2;2752:9;;;;2718:176;2825:1;2813:8;:13;2809:85;;2850:2;2843:9;;;;2809:85;2911:1;2904:8;;2634:286;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:139::-;548:9;581:37;612:5;581:37;:::i;:::-;568:50;;485:139;;;:::o;630:157::-;730:50;774:5;730:50;:::i;:::-;725:3;718:63;630:157;;:::o;793:248::-;899:4;937:2;926:9;922:18;914:26;;950:84;1031:1;1020:9;1016:17;1007:6;950:84;:::i;:::-;793:248;;;;:::o;1047:96::-;1084:7;1113:24;1131:5;1113:24;:::i;:::-;1102:35;;1047:96;;;:::o;1149:118::-;1236:24;1254:5;1236:24;:::i;:::-;1231:3;1224:37;1149:118;;:::o;1273:222::-;1366:4;1404:2;1393:9;1389:18;1381:26;;1417:71;1485:1;1474:9;1470:17;1461:6;1417:71;:::i;:::-;1273:222;;;;:::o;1501:77::-;1538:7;1567:5;1556:16;;1501:77;;;:::o;1584:118::-;1671:24;1689:5;1671:24;:::i;:::-;1666:3;1659:37;1584:118;;:::o;1708:222::-;1801:4;1839:2;1828:9;1824:18;1816:26;;1852:71;1920:1;1909:9;1905:17;1896:6;1852:71;:::i;:::-;1708:222;;;;:::o;2017:117::-;2126:1;2123;2116:12;2263:122;2336:24;2354:5;2336:24;:::i;:::-;2329:5;2326:35;2316:63;;2375:1;2372;2365:12;2316:63;2263:122;:::o;2391:139::-;2437:5;2475:6;2462:20;2453:29;;2491:33;2518:5;2491:33;:::i;:::-;2391:139;;;;:::o;2536:329::-;2595:6;2644:2;2632:9;2623:7;2619:23;2615:32;2612:119;;;2650:79;;:::i;:::-;2612:119;2770:1;2795:53;2840:7;2831:6;2820:9;2816:22;2795:53;:::i;:::-;2785:63;;2741:117;2536:329;;;;:::o;2871:122::-;2944:24;2962:5;2944:24;:::i;:::-;2937:5;2934:35;2924:63;;2983:1;2980;2973:12;2924:63;2871:122;:::o;2999:139::-;3045:5;3083:6;3070:20;3061:29;;3099:33;3126:5;3099:33;:::i;:::-;2999:139;;;;:::o;3144:329::-;3203:6;3252:2;3240:9;3231:7;3227:23;3223:32;3220:119;;;3258:79;;:::i;:::-;3220:119;3378:1;3403:53;3448:7;3439:6;3428:9;3424:22;3403:53;:::i;:::-;3393:63;;3349:117;3144:329;;;;:::o;3479:143::-;3536:5;3567:6;3561:13;3552:22;;3583:33;3610:5;3583:33;:::i;:::-;3479:143;;;;:::o;3628:351::-;3698:6;3747:2;3735:9;3726:7;3722:23;3718:32;3715:119;;;3753:79;;:::i;:::-;3715:119;3873:1;3898:64;3954:7;3945:6;3934:9;3930:22;3898:64;:::i;:::-;3888:74;;3844:128;3628:351;;;;:::o;3985:169::-;4069:11;4103:6;4098:3;4091:19;4143:4;4138:3;4134:14;4119:29;;3985:169;;;;:::o;4160:166::-;4300:18;4296:1;4288:6;4284:14;4277:42;4160:166;:::o;4332:366::-;4474:3;4495:67;4559:2;4554:3;4495:67;:::i;:::-;4488:74;;4571:93;4660:3;4571:93;:::i;:::-;4689:2;4684:3;4680:12;4673:19;;4332:366;;;:::o;4704:419::-;4870:4;4908:2;4897:9;4893:18;4885:26;;4957:9;4951:4;4947:20;4943:1;4932:9;4928:17;4921:47;4985:131;5111:4;4985:131;:::i;:::-;4977:139;;4704:419;;;:::o;5129:442::-;5278:4;5316:2;5305:9;5301:18;5293:26;;5329:71;5397:1;5386:9;5382:17;5373:6;5329:71;:::i;:::-;5410:72;5478:2;5467:9;5463:18;5454:6;5410:72;:::i;:::-;5492;5560:2;5549:9;5545:18;5536:6;5492:72;:::i;:::-;5129:442;;;;;;:::o;5577:90::-;5611:7;5654:5;5647:13;5640:21;5629:32;;5577:90;;;:::o;5673:116::-;5743:21;5758:5;5743:21;:::i;:::-;5736:5;5733:32;5723:60;;5779:1;5776;5769:12;5723:60;5673:116;:::o;5795:137::-;5849:5;5880:6;5874:13;5865:22;;5896:30;5920:5;5896:30;:::i;:::-;5795:137;;;;:::o;5938:345::-;6005:6;6054:2;6042:9;6033:7;6029:23;6025:32;6022:119;;;6060:79;;:::i;:::-;6022:119;6180:1;6205:61;6258:7;6249:6;6238:9;6234:22;6205:61;:::i;:::-;6195:71;;6151:125;5938:345;;;;:::o;6289:165::-;6429:17;6425:1;6417:6;6413:14;6406:41;6289:165;:::o;6460:366::-;6602:3;6623:67;6687:2;6682:3;6623:67;:::i;:::-;6616:74;;6699:93;6788:3;6699:93;:::i;:::-;6817:2;6812:3;6808:12;6801:19;;6460:366;;;:::o;6832:419::-;6998:4;7036:2;7025:9;7021:18;7013:26;;7085:9;7079:4;7075:20;7071:1;7060:9;7056:17;7049:47;7113:131;7239:4;7113:131;:::i;:::-;7105:139;;6832:419;;;:::o;7257:172::-;7397:24;7393:1;7385:6;7381:14;7374:48;7257:172;:::o;7435:366::-;7577:3;7598:67;7662:2;7657:3;7598:67;:::i;:::-;7591:74;;7674:93;7763:3;7674:93;:::i;:::-;7792:2;7787:3;7783:12;7776:19;;7435:366;;;:::o;7807:419::-;7973:4;8011:2;8000:9;7996:18;7988:26;;8060:9;8054:4;8050:20;8046:1;8035:9;8031:17;8024:47;8088:131;8214:4;8088:131;:::i;:::-;8080:139;;7807:419;;;:::o;8232:332::-;8353:4;8391:2;8380:9;8376:18;8368:26;;8404:71;8472:1;8461:9;8457:17;8448:6;8404:71;:::i;:::-;8485:72;8553:2;8542:9;8538:18;8529:6;8485:72;:::i;:::-;8232:332;;;;;:::o;8570:166::-;8710:18;8706:1;8698:6;8694:14;8687:42;8570:166;:::o;8742:366::-;8884:3;8905:67;8969:2;8964:3;8905:67;:::i;:::-;8898:74;;8981:93;9070:3;8981:93;:::i;:::-;9099:2;9094:3;9090:12;9083:19;;8742:366;;;:::o;9114:419::-;9280:4;9318:2;9307:9;9303:18;9295:26;;9367:9;9361:4;9357:20;9353:1;9342:9;9338:17;9331:47;9395:131;9521:4;9395:131;:::i;:::-;9387:139;;9114:419;;;:::o;9539:167::-;9679:19;9675:1;9667:6;9663:14;9656:43;9539:167;:::o;9712:366::-;9854:3;9875:67;9939:2;9934:3;9875:67;:::i;:::-;9868:74;;9951:93;10040:3;9951:93;:::i;:::-;10069:2;10064:3;10060:12;10053:19;;9712:366;;;:::o;10084:419::-;10250:4;10288:2;10277:9;10273:18;10265:26;;10337:9;10331:4;10327:20;10323:1;10312:9;10308:17;10301:47;10365:131;10491:4;10365:131;:::i;:::-;10357:139;;10084:419;;;:::o;10509:332::-;10630:4;10668:2;10657:9;10653:18;10645:26;;10681:71;10749:1;10738:9;10734:17;10725:6;10681:71;:::i;:::-;10762:72;10830:2;10819:9;10815:18;10806:6;10762:72;:::i;:::-;10509:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "877200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burnDPG(uint256)": "infinite",
								"daiToken()": "infinite",
								"dpbToken()": "infinite",
								"dpgToken()": "infinite",
								"getDAIPrice()": "399",
								"issueBond(uint256)": "infinite",
								"mintDPG(uint256)": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"stakeDPG(uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"calculateBond(uint256)": "84"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 3168,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 887,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 887,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 676,
									"end": 887,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 676,
									"end": 887,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 676,
									"end": 887,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 676,
									"end": 887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 676,
									"end": 887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 763,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 793,
									"end": 802,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 776,
									"end": 784,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 776,
									"end": 784,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 776,
									"end": 803,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 831,
									"end": 840,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 814,
									"end": 822,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 814,
									"end": 822,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 814,
									"end": 841,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 869,
									"end": 878,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 852,
									"end": 860,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 852,
									"end": 860,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 852,
									"end": 879,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 887,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1619,
									"end": 1624,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1601,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1596,
									"end": 1599,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1589,
									"end": 1626,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1731,
									"end": 1735,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1769,
									"end": 1771,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1758,
									"end": 1767,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1754,
									"end": 1772,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1848,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 1852,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1826,
									"end": 1832,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1782,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 3168,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209655edcda10c7aaa6884ac9c4617494ed6f6eb85d0ba8fcaa946f759e4838c7364736f6c634300081a0033",
									".code": [
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "BE22F546"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "BE22F546"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "CC7B6C63"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "E4C40254"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "E8981C66"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "EFC37873"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "590FDBE1"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "AF294A36"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "B53220C1"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 3168,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 235,
											"end": 256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 235,
											"end": 256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2974,
											"end": 3165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2974,
											"end": 3165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 938,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 938,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 286,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 286,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1886,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1886,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1515,
											"end": 1837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1515,
											"end": 1837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 343,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2234,
											"end": 2545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2234,
											"end": 2545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 235,
											"end": 256,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 235,
											"end": 256,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 235,
											"end": 256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3018,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3100,
											"end": 3114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1041,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1008,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1019,
											"end": 1029,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1000,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1000,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1041,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1041,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 992,
											"end": 1062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 992,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1102,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1102,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1102,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1103,
											"end": 1113,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1127,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1137,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1081,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1081,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1081,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1073,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1073,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1305,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1282,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1282,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1305,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1274,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1405,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1405,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1405,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1406,
											"end": 1416,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1388,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1388,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1460,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "PUSH",
											"source": 6,
											"value": "A577F0B609BBAA3578EF39F3C60D91DD8FA91CDF1725ADED5D005DFCA8A638F8"
										},
										{
											"begin": 1462,
											"end": 1469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1442,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1470,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 286,
											"end": 307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1968,
											"end": 1978,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1949,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1949,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1949,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1990,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1990,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1941,
											"end": 2011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2044,
											"end": 2054,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2068,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2022,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2022,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2176,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "PUSH",
											"source": 6,
											"value": "7D5463A42DC0F5BEB958D684268CE85D26BCD53A33E7D1398A49125108FAAB45"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2157,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2186,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1577,
											"end": 1585,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1596,
											"end": 1606,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1577,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1577,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1618,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1569,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1569,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1679,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1679,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1679,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1680,
											"end": 1690,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1704,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1658,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1658,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1658,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1650,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1650,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1819,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "PUSH",
											"source": 6,
											"value": "2DA0223090A78FE05410AFE8BFFE41FCE0D1F36895479DE9F0E97DD0B3AE1468"
										},
										{
											"begin": 1821,
											"end": 1828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1801,
											"end": 1829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1829,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 343,
											"end": 364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2312,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2299,
											"end": 2307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2316,
											"end": 2324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2291,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2291,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2399,
											"end": 2407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2385,
											"end": 2408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2408,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2385,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2514,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "PUSH",
											"source": 6,
											"value": "C7F101CD893547ED94B213DF84D6F6C162B79D94F012E0939358B1E2AABBB0F1"
										},
										{
											"begin": 2516,
											"end": 2526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2536,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2493,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2537,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2920,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2634,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2722,
											"end": 2730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2718,
											"end": 2894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2894,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2718,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2813,
											"end": 2821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2826,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2809,
											"end": 2894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2852,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2894,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2809,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2920,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2634,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 485,
											"end": 624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 548,
											"end": 557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 612,
											"end": 617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 581,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 581,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 581,
											"end": 618,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 581,
											"end": 618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 568,
											"end": 618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 485,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 630,
											"end": 787,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 630,
											"end": 787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 774,
											"end": 779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 730,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 730,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 730,
											"end": 780,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 730,
											"end": 780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 725,
											"end": 728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 718,
											"end": 781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 630,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 630,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 899,
											"end": 903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 922,
											"end": 940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 914,
											"end": 940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 914,
											"end": 940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1013,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 950,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 950,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 793,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1047,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1113,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1113,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1102,
											"end": 1137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1102,
											"end": 1137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1047,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1267,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1149,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1254,
											"end": 1259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1236,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1260,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1236,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1273,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1366,
											"end": 1370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1483,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1487,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1417,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1488,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1417,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1495,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1578,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1501,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1538,
											"end": 1545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1572,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1578,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1702,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1584,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1689,
											"end": 1694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1671,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1671,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1696,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1930,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1708,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1837,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1920,
											"end": 1921,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1852,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1923,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1852,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1930,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2017,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2128,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2385,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2263,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2336,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2360,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2336,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2361,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2377,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2316,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2530,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2391,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2482,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2518,
											"end": 2523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2491,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2530,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2865,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2536,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2630,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2619,
											"end": 2642,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2647,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2731,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2612,
											"end": 2731,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2650,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2650,
											"end": 2729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2729,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2650,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2731,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2612,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2840,
											"end": 2847,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2831,
											"end": 2837,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2795,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2848,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2795,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2848,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2865,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2993,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2871,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2962,
											"end": 2967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2944,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 2968,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2944,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2934,
											"end": 2969,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2924,
											"end": 2987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2985,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2987,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2924,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3090,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3126,
											"end": 3131,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3099,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3132,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3099,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3254,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3238,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3255,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3258,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3258,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3448,
											"end": 3455,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3403,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3456,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3403,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3456,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3622,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3479,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3573,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3574,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3583,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3616,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3583,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3622,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3979,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3628,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3749,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3750,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3753,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3753,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3832,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3753,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3954,
											"end": 3961,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3943,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3898,
											"end": 3962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3962,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3898,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3979,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4154,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3985,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4110,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4138,
											"end": 4141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4154,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4326,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 4160,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742044414900000000000000000000000000000000"
										},
										{
											"begin": 4296,
											"end": 4297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4319,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4698,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 4332,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 4477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4554,
											"end": 4557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4495,
											"end": 4562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4562,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4495,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4571,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4571,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 4571,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4571,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4571,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 4692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 4692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5123,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4704,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4874,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 4906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 4966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4947,
											"end": 4967,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 4985,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5116,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4985,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5123,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 5123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5571,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5129,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5318,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5397,
											"end": 5398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5329,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5400,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5329,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5478,
											"end": 5480,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5467,
											"end": 5476,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5454,
											"end": 5460,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5410,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5482,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5410,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5545,
											"end": 5563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5542,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5492,
											"end": 5564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5564,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5492,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5571,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5571,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5667,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5577,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5659,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5660,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5661,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 5789,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5673,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5758,
											"end": 5763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 5743,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5764,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5743,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5765,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5723,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5723,
											"end": 5783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5723,
											"end": 5783,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5723,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 5789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 5789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5932,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5795,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5887,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 5920,
											"end": 5925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5896,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5926,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 5896,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5932,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6042,
											"end": 6051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6040,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6057,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6060,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6060,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6060,
											"end": 6139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6060,
											"end": 6139,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6060,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6258,
											"end": 6265,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6256,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6205,
											"end": 6266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6266,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6205,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 6283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6289,
											"end": 6454,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6289,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6446,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 6425,
											"end": 6426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6447,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6289,
											"end": 6454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6289,
											"end": 6454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6826,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6460,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6623,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6687,
											"end": 6689,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 6682,
											"end": 6685,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6623,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6623,
											"end": 6690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6623,
											"end": 6690,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6623,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 6690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6616,
											"end": 6690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6788,
											"end": 6791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6699,
											"end": 6792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6699,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6819,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6812,
											"end": 6815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6826,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7251,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 6832,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7013,
											"end": 7039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7013,
											"end": 7039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7085,
											"end": 7094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7079,
											"end": 7083,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7095,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7069,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7239,
											"end": 7243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7113,
											"end": 7244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7244,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7113,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 7251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7429,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7257,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7421,
											"name": "PUSH",
											"source": 7,
											"value": "444149207072696365206D757374206265203E20243100000000000000000000"
										},
										{
											"begin": 7393,
											"end": 7394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7662,
											"end": 7664,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 7657,
											"end": 7660,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7598,
											"end": 7665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7665,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7598,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7763,
											"end": 7766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7674,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7767,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7674,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7792,
											"end": 7794,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7787,
											"end": 7790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 7795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7776,
											"end": 7795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7776,
											"end": 7795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8000,
											"end": 8009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7988,
											"end": 8014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7988,
											"end": 8014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8060,
											"end": 8069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8070,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8046,
											"end": 8047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8024,
											"end": 8071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8088,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 8214,
											"end": 8218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8088,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8088,
											"end": 8219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8088,
											"end": 8219,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 8088,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 8226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 8226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8564,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 8232,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8353,
											"end": 8357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8393,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8380,
											"end": 8389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8376,
											"end": 8394,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8368,
											"end": 8394,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8368,
											"end": 8394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 8472,
											"end": 8473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8454,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8404,
											"end": 8475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8475,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 8404,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8485,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8553,
											"end": 8555,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8542,
											"end": 8551,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8535,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8485,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 8485,
											"end": 8557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8485,
											"end": 8557,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8485,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8564,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8564,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8710,
											"end": 8728,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742044504700000000000000000000000000000000"
										},
										{
											"begin": 8706,
											"end": 8707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8694,
											"end": 8708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8687,
											"end": 8729,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 9108,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 8742,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8905,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 8969,
											"end": 8971,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 8964,
											"end": 8967,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8905,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 8905,
											"end": 8972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8905,
											"end": 8972,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 8905,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9070,
											"end": 9073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8981,
											"end": 9074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9074,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 8981,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9099,
											"end": 9101,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9094,
											"end": 9097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9090,
											"end": 9102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9083,
											"end": 9102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9083,
											"end": 9102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 9108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 9108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 9108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 9108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9533,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 9114,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9280,
											"end": 9284,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9320,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9316,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9303,
											"end": 9321,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9295,
											"end": 9321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9367,
											"end": 9376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9361,
											"end": 9365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9377,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9353,
											"end": 9354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9351,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9338,
											"end": 9355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9378,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9521,
											"end": 9525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 9395,
											"end": 9526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9526,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9395,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9387,
											"end": 9526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9387,
											"end": 9526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9706,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 9539,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9679,
											"end": 9698,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420626F6E642074797065000000000000000000000000000000"
										},
										{
											"begin": 9675,
											"end": 9676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9667,
											"end": 9673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9663,
											"end": 9677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9656,
											"end": 9699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9854,
											"end": 9857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9875,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 9939,
											"end": 9941,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9934,
											"end": 9937,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9875,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 9875,
											"end": 9942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9875,
											"end": 9942,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 9875,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9868,
											"end": 9942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9868,
											"end": 9942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9951,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 10040,
											"end": 10043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9951,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 9951,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9951,
											"end": 10044,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9951,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10069,
											"end": 10071,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10053,
											"end": 10072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10053,
											"end": 10072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9712,
											"end": 10078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10277,
											"end": 10286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10273,
											"end": 10291,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10265,
											"end": 10291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10265,
											"end": 10291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10331,
											"end": 10335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10323,
											"end": 10324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10308,
											"end": 10325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10491,
											"end": 10495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 10365,
											"end": 10496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10496,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10365,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10357,
											"end": 10496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10357,
											"end": 10496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10084,
											"end": 10503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10841,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 10509,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10630,
											"end": 10634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10668,
											"end": 10670,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10657,
											"end": 10666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10653,
											"end": 10671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10645,
											"end": 10671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10645,
											"end": 10671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10749,
											"end": 10750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10747,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 10751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10725,
											"end": 10731,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10681,
											"end": 10752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10752,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10681,
											"end": 10752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10762,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10830,
											"end": 10832,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10819,
											"end": 10828,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10815,
											"end": 10833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10762,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10762,
											"end": 10834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10762,
											"end": 10834,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10762,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10841,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10841,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10509,
											"end": 10841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"j.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"burnDPG(uint256)": "e4c40254",
							"daiToken()": "be22f546",
							"dpbToken()": "e8981c66",
							"dpgToken()": "590fdbe1",
							"getDAIPrice()": "af294a36",
							"issueBond(uint256)": "efc37873",
							"mintDPG(uint256)": "b53220c1",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stakeDPG(uint256)": "cc7b6c63",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dpgToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_daiToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dpbToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondType\",\"type\":\"uint256\"}],\"name\":\"BondIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BurnDPG\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintDPG\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeDPG\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnDPG\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dpbToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dpgToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDAIPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bondType\",\"type\":\"uint256\"}],\"name\":\"issueBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintDPG\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeDPG\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"j.sol\":\"Pegbreaker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"j.sol\":{\"keccak256\":\"0x780966a368dc0ce0a82d37cba00fb41688b161ae72ef526f9157d6211f1cf648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c370604a541198603436aecfb11689e5c46823f0d8654488b769123b18cbefa7\",\"dweb:/ipfs/QmYziNHd2pCWCpfKiJa48wDwRv3dGtquzRu4iAhxZ9xQ5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "j.sol:Pegbreaker",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 942,
								"contract": "j.sol:Pegbreaker",
								"label": "dpgToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)799"
							},
							{
								"astId": 945,
								"contract": "j.sol:Pegbreaker",
								"label": "daiToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ERC20)799"
							},
							{
								"astId": 948,
								"contract": "j.sol:Pegbreaker",
								"label": "dpbToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ERC20)799"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ERC20)799": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> j.sol:81:5:\n   |\n81 |     function getDAIPrice() public view returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 3165,
					"file": "j.sol",
					"start": 2974
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"j.sol": {
				"ast": {
					"absolutePath": "j.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"Pegbreaker": [
							1194
						]
					},
					"id": 1195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1195,
							"sourceUnit": 148,
							"src": "61:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1195,
							"sourceUnit": 800,
							"src": "115:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "Ownable",
										"nameLocations": [
											"197:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "197:7:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "197:7:6"
								}
							],
							"canonicalName": "Pegbreaker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1194,
							"linearizedBaseContracts": [
								1194,
								147,
								933
							],
							"name": "Pegbreaker",
							"nameLocation": "183:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "590fdbe1",
									"id": 942,
									"mutability": "mutable",
									"name": "dpgToken",
									"nameLocation": "248:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "235:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$799",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "ERC20",
											"nameLocations": [
												"235:5:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 799,
											"src": "235:5:6"
										},
										"referencedDeclaration": 799,
										"src": "235:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$799",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "be22f546",
									"id": 945,
									"mutability": "mutable",
									"name": "daiToken",
									"nameLocation": "299:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "286:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$799",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 944,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 943,
											"name": "ERC20",
											"nameLocations": [
												"286:5:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 799,
											"src": "286:5:6"
										},
										"referencedDeclaration": 799,
										"src": "286:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$799",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e8981c66",
									"id": 948,
									"mutability": "mutable",
									"name": "dpbToken",
									"nameLocation": "356:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1194,
									"src": "343:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$799",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 947,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 946,
											"name": "ERC20",
											"nameLocations": [
												"343:5:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 799,
											"src": "343:5:6"
										},
										"referencedDeclaration": 799,
										"src": "343:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$799",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a577f0b609bbaa3578ef39f3c60d91dd8fa91cdf1725aded5d005dfca8a638f8",
									"id": 954,
									"name": "MintDPG",
									"nameLocation": "406:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "430:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "414:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "444:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "436:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:38:6"
									},
									"src": "400:52:6"
								},
								{
									"anonymous": false,
									"eventSelector": "2da0223090a78fe05410afe8bffe41fce0d1f36895479de9f0e97dd0b3ae1468",
									"id": 960,
									"name": "BurnDPG",
									"nameLocation": "464:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "488:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "472:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "502:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "494:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:38:6"
									},
									"src": "458:52:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7d5463a42dc0f5beb958d684268ce85d26bcd53a33e7d1398a49125108faab45",
									"id": 966,
									"name": "StakeDPG",
									"nameLocation": "522:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "547:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "531:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "561:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "553:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:38:6"
									},
									"src": "516:53:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c7f101cd893547ed94b213df84d6f6c162b79d94f012e0939358b1e2aabbb0f1",
									"id": 974,
									"name": "BondIssued",
									"nameLocation": "581:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "608:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "592:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "622:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "614:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "bondType",
												"nameLocation": "638:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "630:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:56:6"
									},
									"src": "575:73:6"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "765:122:6",
										"statements": [
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 987,
														"name": "dpgToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "776:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 989,
																"name": "_dpgToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "793:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 988,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "787:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "787:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"src": "776:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$799",
														"typeString": "contract ERC20"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "776:27:6"
											},
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 993,
														"name": "daiToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "814:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 995,
																"name": "_daiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "831:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 994,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "825:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "825:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"src": "814:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$799",
														"typeString": "contract ERC20"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "814:27:6"
											},
											{
												"expression": {
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 999,
														"name": "dpbToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "852:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1001,
																"name": "_dpbToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "869:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1000,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "863:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "863:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$799",
															"typeString": "contract ERC20"
														}
													},
													"src": "852:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$799",
														"typeString": "contract ERC20"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "852:27:6"
											}
										]
									},
									"id": 1006,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 983,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "753:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "757:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "753:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 985,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 982,
												"name": "Ownable",
												"nameLocations": [
													"745:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "745:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "745:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "_dpgToken",
												"nameLocation": "696:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "688:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "_daiToken",
												"nameLocation": "715:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "707:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "_dpbToken",
												"nameLocation": "734:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "726:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:57:6"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:0:6"
									},
									"scope": 1194,
									"src": "676:211:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "981:497:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1014,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1019:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1023:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1019:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1012,
																		"name": "daiToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "1000:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$799",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1009:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "1000:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1000:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1017,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "1034:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1000:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420444149",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1043:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c",
																"typeString": "literal_string \"Insufficient DAI\""
															},
															"value": "Insufficient DAI"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d304aaacb5c7ef2daa8f2020bd12b406c3fc4be3e277f10821a4b6763392443c",
																"typeString": "literal_string \"Insufficient DAI\""
															}
														],
														"id": 1011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "992:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "992:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "992:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1025,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1103:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1107:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1103:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1029,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1123:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pegbreaker_$1194",
																				"typeString": "contract Pegbreaker"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pegbreaker_$1194",
																				"typeString": "contract Pegbreaker"
																			}
																		],
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1115:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1027,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1115:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1115:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1031,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "1130:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1023,
																	"name": "daiToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "1081:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$799",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1090:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 482,
																"src": "1081:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1081:57:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1140:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1073:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1073:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "1073:85:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1037,
																	"name": "getDAIPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "1282:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1282:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1298:7:6",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "1282:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "444149207072696365206d757374206265203e202431",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1307:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e",
																"typeString": "literal_string \"DAI price must be > $1\""
															},
															"value": "DAI price must be > $1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33a6c3550732d3ae10752612e0bb815f34a7fbe7a02f41caafa12aa1abca533e",
																"typeString": "literal_string \"DAI price must be > $1\""
															}
														],
														"id": 1036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1274:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1274:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "1274:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1047,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1406:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1410:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1406:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "1418:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1044,
															"name": "dpgToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1388:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$799",
																"typeString": "contract ERC20"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1397:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "1388:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1388:38:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1053,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1450:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1454:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1450:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "1462:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "MintDPG",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1442:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1442:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "EmitStatement",
												"src": "1437:33:6"
											}
										]
									},
									"functionSelector": "b53220c1",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintDPG",
									"nameLocation": "947:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "963:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "955:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:17:6"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "981:0:6"
									},
									"scope": 1194,
									"src": "938:540:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "1558:279:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1067,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1596:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1600:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1596:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1065,
																		"name": "dpgToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "1577:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$799",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1586:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "1577:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1577:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1070,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "1611:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1577:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420445047",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1620:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b",
																"typeString": "literal_string \"Insufficient DPG\""
															},
															"value": "Insufficient DPG"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b",
																"typeString": "literal_string \"Insufficient DPG\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1569:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1569:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "1569:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1078,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1680:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1684:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1680:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1082,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1700:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pegbreaker_$1194",
																				"typeString": "contract Pegbreaker"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pegbreaker_$1194",
																				"typeString": "contract Pegbreaker"
																			}
																		],
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1692:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1080,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1692:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1692:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1084,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "1707:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1076,
																	"name": "dpgToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "1658:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$799",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1667:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 482,
																"src": "1658:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1658:57:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1717:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1650:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "1650:85:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1090,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1809:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1813:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1809:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1092,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "1821:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1089,
														"name": "BurnDPG",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "1801:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "EmitStatement",
												"src": "1796:33:6"
											}
										]
									},
									"functionSelector": "e4c40254",
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnDPG",
									"nameLocation": "1524:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1540:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1532:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:17:6"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1558:0:6"
									},
									"scope": 1194,
									"src": "1515:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "1930:264:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1104,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1968:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1972:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1968:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1102,
																		"name": "dpgToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "1949:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$799",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1958:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "1949:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1949:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1107,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "1983:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1949:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420445047",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1992:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b",
																"typeString": "literal_string \"Insufficient DPG\""
															},
															"value": "Insufficient DPG"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dee553a81aebfe6ff8497130eaba939591913633c62c42a7681029445200dd0b",
																"typeString": "literal_string \"Insufficient DPG\""
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1941:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1941:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "1941:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2044:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2048:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2044:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1119,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2064:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pegbreaker_$1194",
																		"typeString": "contract Pegbreaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pegbreaker_$1194",
																		"typeString": "contract Pegbreaker"
																	}
																],
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2056:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2056:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2056:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "2071:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1112,
															"name": "dpgToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "2022:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$799",
																"typeString": "contract ERC20"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2031:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "2022:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "2022:57:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2166:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2170:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2166:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "2178:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"name": "StakeDPG",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2157:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "EmitStatement",
												"src": "2152:34:6"
											}
										]
									},
									"functionSelector": "cc7b6c63",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeDPG",
									"nameLocation": "1895:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1912:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1904:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:17:6"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1930:0:6"
									},
									"scope": 1194,
									"src": "1886:308:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "2280:265:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1137,
																	"name": "bondType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "2299:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2311:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2299:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1140,
																	"name": "bondType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "2316:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2328:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2316:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2299:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420626f6e642074797065",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2331:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b",
																"typeString": "literal_string \"Invalid bond type\""
															},
															"value": "Invalid bond type"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ad50e4609383952e17aaa4a52e811cfb61880b6826ebe395eb2d5a3f21cb70b",
																"typeString": "literal_string \"Invalid bond type\""
															}
														],
														"id": 1136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2291:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "2291:60:6"
											},
											{
												"assignments": [
													1148
												],
												"declarations": [
													{
														"constant": false,
														"id": 1148,
														"mutability": "mutable",
														"name": "bondAmount",
														"nameLocation": "2372:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "2364:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1147,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2364:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1152,
												"initialValue": {
													"arguments": [
														{
															"id": 1150,
															"name": "bondType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2399:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1149,
														"name": "calculateBond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "2385:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2385:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2364:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2504:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2508:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2504:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1156,
															"name": "bondAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2516:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1157,
															"name": "bondType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2528:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1153,
														"name": "BondIssued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "2493:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "EmitStatement",
												"src": "2488:49:6"
											}
										]
									},
									"functionSelector": "efc37873",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "issueBond",
									"nameLocation": "2243:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "bondType",
												"nameLocation": "2261:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2253:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:18:6"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2280:0:6"
									},
									"scope": 1194,
									"src": "2234:311:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "2707:213:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1168,
														"name": "bondType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "2722:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2734:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2722:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1174,
															"name": "bondType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "2813:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2825:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2813:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1180,
													"nodeType": "IfStatement",
													"src": "2809:85:6",
													"trueBody": {
														"id": 1179,
														"nodeType": "Block",
														"src": "2828:66:6",
														"statements": [
															{
																"expression": {
																	"hexValue": "3630",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2850:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																},
																"functionReturnParameters": 1167,
																"id": 1178,
																"nodeType": "Return",
																"src": "2843:9:6"
															}
														]
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "2718:176:6",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "2737:66:6",
													"statements": [
														{
															"expression": {
																"hexValue": "3235",
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2759:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_25_by_1",
																	"typeString": "int_const 25"
																},
																"value": "25"
															},
															"functionReturnParameters": 1167,
															"id": 1172,
															"nodeType": "Return",
															"src": "2752:9:6"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2911:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1167,
												"id": 1183,
												"nodeType": "Return",
												"src": "2904:8:6"
											}
										]
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateBond",
									"nameLocation": "2643:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "bondType",
												"nameLocation": "2665:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2657:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:18:6"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2698:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:9:6"
									},
									"scope": 1194,
									"src": "2634:286:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "3027:138:6",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3107:7:6",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1"
												},
												"functionReturnParameters": 1189,
												"id": 1191,
												"nodeType": "Return",
												"src": "3100:14:6"
											}
										]
									},
									"functionSelector": "af294a36",
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDAIPrice",
									"nameLocation": "2983:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2994:2:6"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "3018:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3018:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3017:9:6"
									},
									"scope": 1194,
									"src": "2974:191:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1195,
							"src": "174:2994:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								954,
								960,
								966,
								974
							]
						}
					],
					"src": "33:3137:6"
				},
				"id": 6
			}
		}
	}
}